digraph ClassDiagram {
	 fontname = "Bitstream Vera Sans"
	 fontsize = 8

	 node [
		 fontname = "Bistream Vera Sans"
		 fontsize = 8
		 shape = "record"
	 ]

	 edge [
		 fontname = "Bistream Vera Sans"
		 fontsize = 8
	 ]

	 FieldDeclarationMatch [
		 label = "{FieldDeclarationMatch||# FieldDeclarationMatch(IJavaElement, int, int, int, SearchParticipant, IResource) : \l}"
	 ]

	 FieldReferenceMatch [
		 label = "{FieldReferenceMatch|- isReadAccess : boolean\l- isWriteAccess : boolean\l|# FieldReferenceMatch(IJavaElement, int, int, int, boolean, boolean, boolean, SearchParticipant, IResource) : \l# isReadAccess() : boolean\l# isWriteAccess() : boolean\l}"
	 ]

	 IJavaSearchConstants [
		 label = "{IJavaSearchConstants||# UNKNOWN() : int\l# TYPE() : int\l# METHOD() : int\l# PACKAGE() : int\l# CONSTRUCTOR() : int\l# FIELD() : int\l# CLASS() : int\l# INTERFACE() : int\l# ENUM() : int\l# ANNOTATION_TYPE() : int\l# CLASS_AND_ENUM() : int\l# CLASS_AND_INTERFACE() : int\l# INTERFACE_AND_ANNOTATION() : int\l# DECLARATIONS() : int\l# IMPLEMENTORS() : int\l# REFERENCES() : int\l# ALL_OCCURRENCES() : int\l# READ_ACCESSES() : int\l# WRITE_ACCESSES() : int\l# IGNORE_DECLARING_TYPE() : int\l# IGNORE_RETURN_TYPE() : int\l# FIELD_DECLARATION_TYPE_REFERENCE() : int\l# LOCAL_VARIABLE_DECLARATION_TYPE_REFERENCE() : int\l# PARAMETER_DECLARATION_TYPE_REFERENCE() : int\l# SUPERTYPE_TYPE_REFERENCE() : int\l# THROWS_CLAUSE_TYPE_REFERENCE() : int\l# CAST_TYPE_REFERENCE() : int\l# CATCH_TYPE_REFERENCE() : int\l# CLASS_INSTANCE_CREATION_TYPE_REFERENCE() : int\l# RETURN_TYPE_REFERENCE() : int\l# IMPORT_DECLARATION_TYPE_REFERENCE() : int\l# ANNOTATION_TYPE_REFERENCE() : int\l# TYPE_ARGUMENT_TYPE_REFERENCE() : int\l# TYPE_VARIABLE_BOUND_TYPE_REFERENCE() : int\l# WILDCARD_BOUND_TYPE_REFERENCE() : int\l# INSTANCEOF_TYPE_REFERENCE() : int\l# SUPER_REFERENCE() : int\l# QUALIFIED_REFERENCE() : int\l# THIS_REFERENCE() : int\l# IMPLICIT_THIS_REFERENCE() : int\l# METHOD_REFERENCE_EXPRESSION() : int\l# EXACT_MATCH() : int\l# PREFIX_MATCH() : int\l# PATTERN_MATCH() : int\l# CASE_SENSITIVE() : boolean\l# CASE_INSENSITIVE() : boolean\l# FORCE_IMMEDIATE_SEARCH() : int\l# CANCEL_IF_NOT_READY_TO_SEARCH() : int\l# WAIT_UNTIL_READY_TO_SEARCH() : int\l}"
	 ]

	 IJavaSearchResultCollector [
		 label = "{IJavaSearchResultCollector||# EXACT_MATCH() : int\l# POTENTIAL_MATCH() : int\l# aboutToStart() : \l# accept(IResource, int, int, IJavaElement, int) : \l# done() : \l# getProgressMonitor() : IProgressMonitor\l}"
	 ]

	 IJavaSearchScope [
		 label = "{IJavaSearchScope||# JAR_FILE_ENTRY_SEPARATOR() : String\l# SOURCES() : int\l# APPLICATION_LIBRARIES() : int\l# SYSTEM_LIBRARIES() : int\l# REFERENCED_PROJECTS() : int\l# encloses(String) : boolean\l# encloses(IJavaElement) : boolean\l# enclosingProjectsAndJars() : IPath\l# includesBinaries() : boolean\l# includesClasspaths() : boolean\l# setIncludesBinaries(boolean) : \l# setIncludesClasspaths(boolean) : \l}"
	 ]

	 ISearchPattern [
		 label = "{ISearchPattern||}"
	 ]

	 ITypeNameRequestor [
		 label = "{ITypeNameRequestor||# acceptClass(char, char, char, String) : \l# acceptInterface(char, char, char, String) : \l}"
	 ]

	 LocalVariableDeclarationMatch [
		 label = "{LocalVariableDeclarationMatch||# LocalVariableDeclarationMatch(IJavaElement, int, int, int, SearchParticipant, IResource) : \l}"
	 ]

	 LocalVariableReferenceMatch [
		 label = "{LocalVariableReferenceMatch|- isReadAccess : boolean\l- isWriteAccess : boolean\l|# LocalVariableReferenceMatch(IJavaElement, int, int, int, boolean, boolean, boolean, SearchParticipant, IResource) : \l# isReadAccess() : boolean\l# isWriteAccess() : boolean\l}"
	 ]

	 MethodDeclarationMatch [
		 label = "{MethodDeclarationMatch||# MethodDeclarationMatch(IJavaElement, int, int, int, SearchParticipant, IResource) : \l}"
	 ]

	 MethodNameMatch [
		 label = "{MethodNameMatch|+ getAccessibility : int\l+ getModifiers : int\l+ getMethod : IMethod\l|}"
	 ]

	 MethodNameRequestor [
		 label = "{MethodNameRequestor||# acceptMethod(char, int, char, char, int, char, char, char, char, char, int, String, int) : \l}"
	 ]

	 MethodReferenceMatch [
		 label = "{MethodReferenceMatch|- constructor : boolean\l- synthetic : boolean\l- superInvocation : boolean\l|# MethodReferenceMatch(IJavaElement, int, int, int, boolean, SearchParticipant, IResource) : \l# MethodReferenceMatch(IJavaElement, int, int, int, boolean, boolean, boolean, SearchParticipant, IResource) : \l# MethodReferenceMatch(IJavaElement, int, int, int, boolean, boolean, boolean, boolean, SearchParticipant, IResource) : \l# isConstructor() : boolean\l# isSynthetic() : boolean\l# isSuperInvocation() : boolean\l}"
	 ]

	 PackageDeclarationMatch [
		 label = "{PackageDeclarationMatch||# PackageDeclarationMatch(IJavaElement, int, int, int, SearchParticipant, IResource) : \l}"
	 ]

	 PackageReferenceMatch [
		 label = "{PackageReferenceMatch||# PackageReferenceMatch(IJavaElement, int, int, int, boolean, SearchParticipant, IResource) : \l}"
	 ]

	 ReferenceMatch [
		 label = "{ReferenceMatch|# localElement : IJavaElement\l|# ReferenceMatch(IJavaElement, int, int, int, boolean, SearchParticipant, IResource) : \l# getLocalElement() : IJavaElement\l# setLocalElement(IJavaElement) : \l}"
	 ]

	 SearchDocument [
		 label = "{SearchDocument|- index : Index\l- containerRelativePath : String\l- parser : SourceElementParser\l- documentPath : String\l- participant : SearchParticipant\l- shouldIndexResolvedDocument : boolean\l+ getByteContents : byte\l+ getCharContents : char\l+ getEncoding : String\l|# SearchDocument(String, SearchParticipant) : \l# addIndexEntry(char, char) : \l# getContainerRelativePath() : String\l# getParser() : SourceElementParser\l# getParticipant() : SearchParticipant\l# getPath() : String\l# removeAllIndexEntries() : \l# setIndex(Index) : \l# setParser(SourceElementParser) : \l# requireIndexingResolvedDocument() : \l# shouldIndexResolvedDocument() : boolean\l}"
	 ]

	 TypeNameRequestorAdapter [
		 label = "{TypeNameRequestorAdapter|# pattern : SearchPattern\l# resultCollector : IJavaSearchResultCollector\l# nameRequestor : ITypeNameRequestor\l- basicEngine : BasicSearchEngine\l|# null() : \l# SearchPatternAdapter(SearchPattern) : \l# null() : \l# ResultCollectorAdapter(IJavaSearchResultCollector) : \l# acceptSearchMatch(SearchMatch) : \l# beginReporting() : \l# endReporting() : \l# null() : \l# TypeNameRequestorAdapter(ITypeNameRequestor) : \l# acceptType(int, char, char, char, String, AccessRestriction) : \l# SearchEngine() : \l# SearchEngine(ICompilationUnit) : \l# SearchEngine(IWorkingCopy) : \l# SearchEngine(WorkingCopyOwner) : \l# createHierarchyScope(IType) : IJavaSearchScope\l# createHierarchyScope(IType, WorkingCopyOwner) : IJavaSearchScope\l# createStrictHierarchyScope(IJavaProject, IType, boolean, boolean, WorkingCopyOwner) : IJavaSearchScope\l# createJavaSearchScope(IResource) : IJavaSearchScope\l# createJavaSearchScope(IJavaElement) : IJavaSearchScope\l# createJavaSearchScope(IJavaElement, boolean) : IJavaSearchScope\l# createJavaSearchScope(IJavaElement, int) : IJavaSearchScope\l# createOrSearchPattern(ISearchPattern, ISearchPattern) : ISearchPattern\l# createSearchPattern(String, int, int, boolean) : ISearchPattern\l# createSearchPattern(IJavaElement, int) : ISearchPattern\l# createTypeNameMatch(IType, int) : TypeNameMatch\l# createMethodNameMatch(IMethod, int) : MethodNameMatch\l# createWorkspaceScope() : IJavaSearchScope\l# getDefaultSearchParticipant() : SearchParticipant\l# search(IWorkspace, String, int, int, IJavaSearchScope, IJavaSearchResultCollector) : \l# search(IWorkspace, IJavaElement, int, IJavaSearchScope, IJavaSearchResultCollector) : \l# search(IWorkspace, ISearchPattern, IJavaSearchScope, IJavaSearchResultCollector) : \l# search(SearchPattern, SearchParticipant, IJavaSearchScope, SearchRequestor, IProgressMonitor) : \l# searchAllMethodNames(char, int, char, int, char, int, char, int, IJavaSearchScope, MethodNameRequestor, int, IProgressMonitor) : \l# searchAllMethodNames(char, int, char, int, char, int, char, int, IJavaSearchScope, MethodNameMatchRequestor, int, IProgressMonitor) : \l# searchAllMethodNames(char, int, char, int, IJavaSearchScope, MethodNameRequestor, int, IProgressMonitor) : \l# searchAllMethodNames(char, int, char, int, IJavaSearchScope, MethodNameMatchRequestor, int, IProgressMonitor) : \l# searchAllTypeNames(char, char, int, int, IJavaSearchScope, TypeNameRequestor, int, IProgressMonitor) : \l# searchAllTypeNames(char, int, char, int, int, IJavaSearchScope, TypeNameRequestor, int, IProgressMonitor) : \l# searchAllTypeNames(char, int, char, int, int, IJavaSearchScope, TypeNameMatchRequestor, int, IProgressMonitor) : \l# searchAllTypeNames(char, char, IJavaSearchScope, TypeNameRequestor, int, IProgressMonitor) : \l# searchAllTypeNames(char, char, IJavaSearchScope, TypeNameMatchRequestor, int, IProgressMonitor) : \l# searchAllTypeNames(char, char, int, int, IJavaSearchScope, ITypeNameRequestor, int, IProgressMonitor) : \l# searchAllTypeNames(IWorkspace, char, char, int, boolean, int, IJavaSearchScope, ITypeNameRequestor, int, IProgressMonitor) : \l# searchDeclarationsOfAccessedFields(IJavaElement, SearchRequestor, IProgressMonitor) : \l# searchDeclarationsOfAccessedFields(IWorkspace, IJavaElement, IJavaSearchResultCollector) : \l# searchDeclarationsOfReferencedTypes(IJavaElement, SearchRequestor, IProgressMonitor) : \l# searchDeclarationsOfReferencedTypes(IWorkspace, IJavaElement, IJavaSearchResultCollector) : \l# searchDeclarationsOfSentMessages(IJavaElement, SearchRequestor, IProgressMonitor) : \l# searchDeclarationsOfSentMessages(IWorkspace, IJavaElement, IJavaSearchResultCollector) : \l}"
	 ]

	 SearchMatch [
		 label = "{SearchMatch|+ A_ACCURATE : int\l+ A_INACCURATE : int\l- element : Object\l- length : int\l- offset : int\l- accuracy : int\l- participant : SearchParticipant\l- resource : IResource\l- insideDocComment : boolean\l- ALL_GENERIC_FLAVORS : int\l- rule : int\l- raw : boolean\l- implicit : boolean\l|# SearchMatch(IJavaElement, int, int, int, SearchParticipant, IResource) : \l# getAccuracy() : int\l# getElement() : Object\l# getLength() : int\l# getOffset() : int\l# getParticipant() : SearchParticipant\l# getResource() : IResource\l# getRule() : int\l# isEquivalent() : boolean\l# isErasure() : boolean\l# isExact() : boolean\l# isImplicit() : boolean\l# isRaw() : boolean\l# isInsideDocComment() : boolean\l# setAccuracy(int) : \l# setElement(Object) : \l# setInsideDocComment(boolean) : \l# setImplicit(boolean) : \l# setLength(int) : \l# setOffset(int) : \l# setParticipant(SearchParticipant) : \l# setResource(IResource) : \l# setRule(int) : \l# setRaw(boolean) : \l# toString() : String\l}"
	 ]

	 SearchParticipant [
		 label = "{SearchParticipant|- lastIndexLocation : IPath\l+ getDocument : SearchDocument\l+ indexDocument : null\l+ locateMatches : null\l+ selectIndexes : IPath\l|# SearchParticipant() : \l# beginSearching() : \l# doneSearching() : \l# getDescription(String, SearchDocument, IPath) : String\l# indexResolvedDocument(SearchDocument, IPath, SearchDocument, SearchPattern, IJavaSearchScope, SearchRequestor, IProgressMonitor) : \l# removeIndex(IPath) : \l# resolveDocument(SearchDocument) : \l# scheduleDocumentIndexing(SearchDocument, IPath, SearchPattern, IJavaSearchScope) : \l}"
	 ]

	 SearchPattern [
		 label = "{SearchPattern|+ R_EXACT_MATCH : int\l+ R_PREFIX_MATCH : int\l+ R_PATTERN_MATCH : int\l+ R_REGEXP_MATCH : int\l+ R_CASE_SENSITIVE : int\l+ R_ERASURE_MATCH : int\l+ R_EQUIVALENT_MATCH : int\l+ R_FULL_MATCH : int\l+ R_CAMELCASE_MATCH : int\l+ R_CAMELCASE_SAME_PART_COUNT_MATCH : int\l+ R_SUBSTRING_MATCH : int\l- MODE_MASK : int\l- matchRule : int\l+ focus : IJavaElement\l+ kind : int\l+ mustResolve : boolean\l+ getBlankPattern : SearchPattern\l|# SearchPattern(int) : \l# acceptMatch(String, String, char, SearchPattern, IndexQueryRequestor, SearchParticipant, IJavaSearchScope) : \l# acceptMatch(String, String, char, SearchPattern, IndexQueryRequestor, SearchParticipant, IJavaSearchScope, IProgressMonitor) : \l# currentPattern() : SearchPattern\l# camelCaseMatch(String, String) : boolean\l# camelCaseMatch(String, String, boolean) : boolean\l# camelCaseMatch(String, int, int, String, int, int) : boolean\l# camelCaseMatch(String, int, int, String, int, int, boolean) : boolean\l# getMatchingRegions(String, String, int) : int\l# createAndPattern(SearchPattern, SearchPattern) : SearchPattern\l# createFieldPattern(String, int, int) : SearchPattern\l# createMethodOrConstructorPattern(String, int, int, boolean) : SearchPattern\l# createOrPattern(SearchPattern, SearchPattern) : SearchPattern\l# createPackagePattern(String, int, int) : SearchPattern\l# createPattern(String, int, int, int) : SearchPattern\l# createPattern(IJavaElement, int) : SearchPattern\l# createPattern(IJavaElement, int, int) : SearchPattern\l# createTypePattern(char, char, char, String, IType, int, int) : SearchPattern\l# createTypePattern(String, int, int, char) : SearchPattern\l# enclosingTypeNames(IType) : char\l# decodeIndexKey(char) : \l# findIndexMatches(Index, IndexQueryRequestor, SearchParticipant, IJavaSearchScope, IProgressMonitor) : \l# getIndexKey() : char\l# getIndexCategories() : char\l# getMatchRule() : int\l# isPolymorphicSearch() : boolean\l# matchesDecodedKey(SearchPattern) : boolean\l# matchesName(char, char) : boolean\l# validateMatchRule(String, int) : int\l# validateCamelCasePattern(String) : boolean\l# queryIn(Index) : EntryResult\l# toString() : String\l}"
	 ]

	 TypeDeclarationMatch [
		 label = "{TypeDeclarationMatch||# TypeDeclarationMatch(IJavaElement, int, int, int, SearchParticipant, IResource) : \l}"
	 ]

	 TypeNameMatch [
		 label = "{TypeNameMatch|+ getAccessibility : int\l+ getModifiers : int\l+ getType : IType\l|# getFullyQualifiedName() : String\l# getPackageFragmentRoot() : IPackageFragmentRoot\l# getPackageName() : String\l# getSimpleTypeName() : String\l# getTypeContainerName() : String\l# getTypeQualifiedName() : String\l}"
	 ]

	 TypeNameRequestor [
		 label = "{TypeNameRequestor||# acceptType(int, char, char, char, String) : \l}"
	 ]

	 TypeParameterDeclarationMatch [
		 label = "{TypeParameterDeclarationMatch||# TypeParameterDeclarationMatch(IJavaElement, int, int, int, SearchParticipant, IResource) : \l}"
	 ]

	 TypeParameterReferenceMatch [
		 label = "{TypeParameterReferenceMatch||# TypeParameterReferenceMatch(IJavaElement, int, int, int, boolean, SearchParticipant, IResource) : \l}"
	 ]

	 TypeReferenceMatch [
		 label = "{TypeReferenceMatch|- otherElements : IJavaElement\l|# TypeReferenceMatch(IJavaElement, int, int, int, boolean, SearchParticipant, IResource) : \l# getOtherElements() : IJavaElement\l# setOtherElements(IJavaElement) : \l}"
	 ]

	 AbstractSearchScope [
		 label = "{AbstractSearchScope|+ processDelta : null\l|# includesBinaries() : boolean\l# includesClasspaths(IJavaElementDelta, int) : boolean\l# setIncludesBinaries(boolean) : \l# setIncludesClasspaths(boolean) : \l}"
	 ]

	 AllTypeDeclarationsVisitor [
		 label = "{AllTypeDeclarationsVisitor|- parser : Parser\l- compilerOptions : CompilerOptions\l- workingCopies : ICompilationUnit\l- workingCopyOwner : WorkingCopyOwner\l+ VERBOSE : boolean\l- declaringTypes : TypeDeclaration\l- declaringTypesPtr : int\l+ typeDecl : TypeDeclaration\l+ type : IType\l+ visitMethods : boolean\l+ enclosingTypeName : char\l# typeInfoStack : Stack\l+ typeDecl : TypeDeclaration\l+ type : IType\l+ visitMethods : boolean\l+ enclosingTypeName : char\l# typeInfoStack : Stack\l|# BasicSearchEngine() : \l# BasicSearchEngine(ICompilationUnit) : \l# convertTypeKind(int) : char\l# BasicSearchEngine(WorkingCopyOwner) : \l# createHierarchyScope(IType) : IJavaSearchScope\l# createHierarchyScope(IType, WorkingCopyOwner) : IJavaSearchScope\l# createStrictHierarchyScope(IJavaProject, IType, boolean, boolean, WorkingCopyOwner) : IJavaSearchScope\l# createJavaSearchScope(IJavaElement) : IJavaSearchScope\l# createJavaSearchScope(IJavaElement, boolean) : IJavaSearchScope\l# createJavaSearchScope(IJavaElement, int) : IJavaSearchScope\l# createTypeNameMatch(IType, int) : TypeNameMatch\l# createMethodNameMatch(IMethod, int) : MethodNameMatch\l# createWorkspaceScope() : IJavaSearchScope\l# findMatches(SearchPattern, SearchParticipant, IJavaSearchScope, SearchRequestor, IProgressMonitor) : \l# getDefaultSearchParticipant() : SearchParticipant\l# getMatchRuleString(int) : String\l# getSearchForString(int) : String\l# getParser() : Parser\l# getWorkingCopies() : ICompilationUnit\l# getWorkingCopies(IJavaElement) : ICompilationUnit\l# match(char, int) : boolean\l# match(char, char, int, char, int, int, char, char) : boolean\l# match(char, int, char) : boolean\l# match(char, int, char, int, char, int, char, int, char, char, char, char) : boolean\l# match(char, int, char, int, char, char, char, char) : boolean\l# search(SearchPattern, SearchParticipant, IJavaSearchScope, SearchRequestor, IProgressMonitor) : \l# searchAllConstructorDeclarations(char, char, int, IJavaSearchScope, IRestrictedAccessConstructorRequestor, int, IProgressMonitor) : \l# acceptIndexMatch(String, SearchPattern, SearchParticipant, AccessRuleSet) : boolean\l# endVisit(TypeDeclaration) : \l# endVisit(TypeDeclaration, CompilationUnitScope) : \l# endVisit(TypeDeclaration, ClassScope) : \l# hasConstructor(TypeDeclaration) : boolean\l# visit(ConstructorDeclaration, ClassScope) : boolean\l# visit(TypeDeclaration, BlockScope) : boolean\l# visit(TypeDeclaration) : boolean\l# visit(TypeDeclaration, CompilationUnitScope) : boolean\l# visit(TypeDeclaration, ClassScope) : boolean\l# searchAllMethodNames(char, int, char, int, IJavaSearchScope, IRestrictedAccessMethodRequestor, int, IProgressMonitor) : \l# acceptIndexMatch(String, SearchPattern, SearchParticipant, AccessRuleSet) : boolean\l# null() : \l# TypeInfo(TypeDeclaration, boolean, char) : \l# getCurrentType() : IType\l# addStackEntry(TypeDeclaration, char) : \l# endVisit(TypeDeclaration, CompilationUnitScope) : \l# endVisit(TypeDeclaration, ClassScope) : \l# visit(MethodDeclaration, ClassScope) : boolean\l# visit(TypeDeclaration, BlockScope) : boolean\l# visit(TypeDeclaration, CompilationUnitScope) : boolean\l# visit(TypeDeclaration, ClassScope) : boolean\l# searchAllMethodNames(char, int, char, int, char, int, char, int, IJavaSearchScope, IRestrictedAccessMethodRequestor, int, IProgressMonitor) : \l# acceptIndexMatch(String, SearchPattern, SearchParticipant, AccessRuleSet) : boolean\l# null() : \l# TypeInfo(TypeDeclaration, boolean, char) : \l# getCurrentType() : IType\l# addStackEntry(TypeDeclaration, char) : \l# endVisit(TypeDeclaration, CompilationUnitScope) : \l# endVisit(TypeDeclaration, ClassScope) : \l# visit(MethodDeclaration, ClassScope) : boolean\l# visit(TypeDeclaration, BlockScope) : boolean\l# visit(TypeDeclaration, CompilationUnitScope) : boolean\l# visit(TypeDeclaration, ClassScope) : boolean\l# reportMatchingMethod(String, char, char, TypeDeclaration, MethodDeclaration, IType, IRestrictedAccessMethodRequestor) : \l# reportMatchingMethods(char, int, IRestrictedAccessMethodRequestor, String, char, IType, char, char) : \l# searchAllSecondaryTypeNames(IPackageFragmentRoot, IRestrictedAccessTypeRequestor, boolean, IProgressMonitor) : \l# acceptIndexMatch(String, SearchPattern, SearchParticipant, AccessRuleSet) : boolean\l# searchAllTypeNames(char, int, char, int, int, IJavaSearchScope, IRestrictedAccessTypeRequestor, int, IProgressMonitor) : \l# acceptIndexMatch(String, SearchPattern, SearchParticipant, AccessRuleSet) : boolean\l# visit(TypeDeclaration, BlockScope) : boolean\l# visit(TypeDeclaration, CompilationUnitScope) : boolean\l# visit(TypeDeclaration, ClassScope) : boolean\l# searchAllTypeNames(char, char, int, int, IJavaSearchScope, IRestrictedAccessTypeRequestor, int, IProgressMonitor) : \l# acceptIndexMatch(String, SearchPattern, SearchParticipant, AccessRuleSet) : boolean\l# visit(TypeDeclaration, BlockScope) : boolean\l# visit(TypeDeclaration, CompilationUnitScope) : boolean\l# visit(TypeDeclaration, ClassScope) : boolean\l# searchDeclarations(IJavaElement, SearchRequestor, SearchPattern, IProgressMonitor) : \l# searchDeclarationsOfAccessedFields(IJavaElement, SearchRequestor, IProgressMonitor) : \l# searchDeclarationsOfReferencedTypes(IJavaElement, SearchRequestor, IProgressMonitor) : \l# searchDeclarationsOfSentMessages(IJavaElement, SearchRequestor, IProgressMonitor) : \l}"
	 ]

	 HierarchyScope [
		 label = "{HierarchyScope|+ focusType : IType\l- focusPath : String\l- owner : WorkingCopyOwner\l- hierarchy : ITypeHierarchy\l- resourcePaths : HashSet\l- enclosingProjectsAndJars : IPath\l# elements : IResource\l# elementCount : int\l+ needsRefresh : boolean\l- subTypes : HashSet\l- javaProject : IJavaProject\l- allowMemberAndEnclosingTypes : boolean\l- includeFocusType : boolean\l|# add(IResource) : \l# HierarchyScope(IJavaProject, IType, WorkingCopyOwner, boolean, boolean, boolean) : \l# HierarchyScope(IType, WorkingCopyOwner) : \l# buildResourceVector() : \l# computeProjectsAndJars(IType) : IPath\l# computeDependents(IJavaProject, HashSet, HashSet) : \l# encloses(String) : boolean\l# encloses(String, IProgressMonitor) : boolean\l# enclosesFineGrained(IJavaElement) : boolean\l# encloses(IJavaElement) : boolean\l# encloses(IJavaElement, IProgressMonitor) : boolean\l# enclosesType(IType, boolean) : boolean\l# enclosingProjectsAndJars() : IPath\l# initialize() : \l# initialize(IProgressMonitor) : \l# processDelta(IJavaElementDelta, int) : \l# refresh() : \l# refresh(IProgressMonitor) : \l# toString() : String\l}"
	 ]

	 IndexSelector [
		 label = "{IndexSelector|+ PROJECT_CAN_SEE_FOCUS : int\l+ PROJECT_SOURCE_CAN_NOT_SEE_FOCUS : int\l+ PROJECT_CAN_NOT_SEE_FOCUS : int\l# searchScope : IJavaSearchScope\l# pattern : SearchPattern\l# indexLocations : IndexLocation\l|# IndexSelector(IJavaSearchScope, SearchPattern) : \l# canSeeFocus(SearchPattern, IPath) : int\l# canSeeFocus(IJavaElement, JavaProject, char) : int\l# canSeeFocus(IJavaElement, JavaProject, char) : int\l# getFocusedElementsAndTypes(SearchPattern, IJavaElement, ObjectVector) : IJavaElement\l# initializeIndexLocations() : \l# getIndexLocations() : IndexLocation\l# getJavaProject(IPath, IJavaModel) : IJavaProject\l# getQualifiedNames(ObjectVector) : char\l}"
	 ]

	 IRestrictedAccessConstructorRequestor [
		 label = "{IRestrictedAccessConstructorRequestor||# acceptConstructor(int, char, int, char, char, char, int, char, int, String, AccessRestriction) : \l}"
	 ]

	 IRestrictedAccessMethodRequestor [
		 label = "{IRestrictedAccessMethodRequestor||# acceptMethod(char, int, char, char, int, char, char, char, char, char, int, String, AccessRestriction, int) : \l}"
	 ]

	 IRestrictedAccessTypeRequestor [
		 label = "{IRestrictedAccessTypeRequestor||# acceptType(int, char, char, char, String, AccessRestriction) : \l}"
	 ]

	 JavaSearchDocument [
		 label = "{JavaSearchDocument|- file : IFile\l# byteContents : byte\l# charContents : char\l|# JavaSearchDocument(String, SearchParticipant) : \l# JavaSearchDocument(java, IPath, byte, SearchParticipant) : \l# getByteContents() : byte\l# getCharContents() : char\l# getEncoding() : String\l# getFile() : IFile\l# toString() : String\l}"
	 ]

	 JavaSearchMethodNameMatch [
		 label = "{JavaSearchMethodNameMatch|# method : IMethod\l# modifiers : int\l- accessibility : int\l|# JavaSearchMethodNameMatch(IMethod, int) : \l+ getAccessibility() : int\l+ getModifiers() : int\l+ getMethod() : IMethod\l# setAccessibility(int) : \l# toString() : String\l}"
	 ]

	 JavaSearchParticipant [
		 label = "{JavaSearchParticipant|- indexSelector : ThreadLocal\l- sourceIndexer : SourceIndexer\l|# beginSearching() : \l# doneSearching() : \l# getDescription() : String\l# getDocument(String) : SearchDocument\l# indexDocument(SearchDocument, IPath) : \l+ indexResolvedDocument(SearchDocument, IPath) : \l# resolveDocument(SearchDocument) : \l# locateMatches(SearchDocument, SearchPattern, IJavaSearchScope, SearchRequestor, IProgressMonitor) : \l# selectIndexes(SearchPattern, IJavaSearchScope) : IPath\l# selectIndexURLs(SearchPattern, IJavaSearchScope) : IndexLocation\l}"
	 ]

	 JavaSearchScope [
		 label = "{JavaSearchScope|- elements : ArrayList\l- projectPaths : ArrayList\l- projectIndexes : int\l- containerPaths : String\l- relativePaths : String\l- isPkgPath : boolean\l# pathRestrictions : AccessRuleSet\l- pathsCount : int\l- threshold : int\l- enclosingProjectsAndJars : IPath\l+ NOT_ENCLOSED : AccessRuleSet\l|# Java