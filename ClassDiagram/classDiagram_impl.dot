digraph ClassDiagram {
	 fontname = "Bitstream Vera Sans"
	 fontsize = 8

	 node [
		 fontname = "Bistream Vera Sans"
		 fontsize = 8
		 shape = "record"
	 ]

	 edge [
		 fontname = "Bistream Vera Sans"
		 fontsize = 8
	 ]

	 AssistAnnotation [
		 label = "{AssistAnnotation|- infoCache : Map\l|# AssistAnnotation(JavaElement, String, Map) : \l# getElementInfo(IProgressMonitor) : Object\l}"
	 ]

	 AssistCompilationUnit [
		 label = "{AssistCompilationUnit|- infoCache : Map\l- bindingCache : Map\l|# AssistCompilationUnit(ICompilationUnit, WorkingCopyOwner, Map, Map) : \l# getElementInfo(IProgressMonitor) : Object\l# getImportContainer() : IImportContainer\l# getPackageDeclaration(String) : IPackageDeclaration\l# getType(String) : IType\l# hasChildren() : boolean\l}"
	 ]

	 AssistImportContainer [
		 label = "{AssistImportContainer|- infoCache : Map\l|# AssistImportContainer(CompilationUnit, Map) : \l# getElementInfo(IProgressMonitor) : Object\l# getImport(String, boolean) : IImportDeclaration\l}"
	 ]

	 AssistImportDeclaration [
		 label = "{AssistImportDeclaration|- infoCache : Map\l|# AssistImportDeclaration(ImportContainer, String, boolean, Map) : \l# getElementInfo(IProgressMonitor) : Object\l}"
	 ]

	 AssistInitializer [
		 label = "{AssistInitializer|- bindingCache : Map\l- infoCache : Map\l|# AssistInitializer(JavaElement, int, Map, Map) : \l# getElementInfo(IProgressMonitor) : Object\l# getType(String, int) : IType\l}"
	 ]

	 AssistOptions [
		 label = "{AssistOptions|+ OPTION_PerformVisibilityCheck : String\l+ OPTION_PerformDeprecationCheck : String\l+ OPTION_ForceImplicitQualification : String\l+ OPTION_FieldPrefixes : String\l+ OPTION_StaticFieldPrefixes : String\l+ OPTION_StaticFinalFieldPrefixes : String\l+ OPTION_LocalPrefixes : String\l+ OPTION_ArgumentPrefixes : String\l+ OPTION_FieldSuffixes : String\l+ OPTION_StaticFieldSuffixes : String\l+ OPTION_StaticFinalFieldSuffixes : String\l+ OPTION_LocalSuffixes : String\l+ OPTION_ArgumentSuffixes : String\l+ OPTION_PerformForbiddenReferenceCheck : String\l+ OPTION_PerformDiscouragedReferenceCheck : String\l+ OPTION_CamelCaseMatch : String\l+ OPTION_SubstringMatch : String\l+ OPTION_SuggestStaticImports : String\l+ ENABLED : String\l+ DISABLED : String\l+ checkVisibility : boolean\l+ checkDeprecation : boolean\l+ checkForbiddenReference : boolean\l+ checkDiscouragedReference : boolean\l+ forceImplicitQualification : boolean\l+ camelCaseMatch : boolean\l+ substringMatch : boolean\l+ suggestStaticImport : boolean\l+ fieldPrefixes : char\l+ staticFieldPrefixes : char\l+ staticFinalFieldPrefixes : char\l+ localPrefixes : char\l+ argumentPrefixes : char\l+ fieldSuffixes : char\l+ staticFieldSuffixes : char\l+ staticFinalFieldSuffixes : char\l+ localSuffixes : char\l+ argumentSuffixes : char\l|# AssistOptions() : \l# AssistOptions(Map) : \l# set(Map) : \l# splitAndTrimOn(char, char) : char\l}"
	 ]

	 AssistPackageDeclaration [
		 label = "{AssistPackageDeclaration|- infoCache : Map\l|# AssistPackageDeclaration(CompilationUnit, String, Map) : \l# getElementInfo(IProgressMonitor) : Object\l# getAnnotation(String) : IAnnotation\l}"
	 ]

	 AssistParser [
		 label = "{AssistParser|+ assistNode : ASTNode\l+ isOrphanCompletionNode : boolean\l- resumedAfterRepair : boolean\l# lastModifiers : int\l# lastModifiersStart : int\l# blockStarts : int\l# previousToken : int\l# previousIdentifierPtr : int\l# bracketDepth : int\l# ElementStackIncrement : int\l# elementPtr : int\l# elementKindStack : int\l# elementInfoStack : int\l# elementObjectInfoStack : Object\l# previousKind : int\l# previousInfo : int\l# previousObjectInfo : Object\l# ASSIST_PARSER : int\l# K_SELECTOR : int\l# K_TYPE_DELIMITER : int\l# K_METHOD_DELIMITER : int\l# K_FIELD_INITIALIZER_DELIMITER : int\l# K_ATTRIBUTE_VALUE_DELIMITER : int\l# K_ENUM_CONSTANT_DELIMITER : int\l# K_LAMBDA_EXPRESSION_DELIMITER : int\l# THIS_CONSTRUCTOR : int\l# SUPER_CONSTRUCTOR : int\l# NO_BODY : int\l# WITH_BODY : int\l# EXPRESSION_BODY : int\l# BLOCK_BODY : int\l# isFirst : boolean\l+ snapShot : AssistParser\l- RECOVERY_TOKENS : int\l+ assistIdentifier : char\l+ createAssistImportReference : ImportReference\l+ createAssistPackageReference : ImportReference\l+ createQualifiedAssistNameReference : NameReference\l+ createQualifiedAssistTypeReference : TypeReference\l+ createParameterizedQualifiedAssistTypeReference : TypeReference\l+ createSingleAssistNameReference : NameReference\l+ createSingleAssistTypeReference : TypeReference\l+ createParameterizedSingleAssistTypeReference : TypeReference\l+ initializeScanner : null\l# createSnapShotParser : AssistParser\l+ setAssistIdentifier : null\l|# AssistParser(ProblemReporter) : \l# copyState(Parser) : \l# becomeSimpleParser() : Object\l# restoreAssistParser(Object) : \l# bodyEnd(AbstractMethodDeclaration) : int\l# bodyEnd(Initializer) : int\l# buildInitialRecoveryState() : RecoveredElement\l# consumeAnnotationTypeDeclarationHeader() : \l# consumeClassBodyDeclaration() : \l# consumeClassBodyopt() : \l# consumeClassHeader() : \l# consumeConstructorBody() : \l# consumeConstructorHeader() : \l# consumeEnhancedForStatementHeaderInit(boolean) : \l# consumeEnterAnonymousClassBody(boolean) : \l# consumeEnterMemberValue() : \l# consumeEnumConstantHeader() : \l# consumeEnumConstantHeaderName() : \l# consumeEnumConstantWithClassBody() : \l# consumeEnumConstantNoClassBody() : \l# consumeEnumHeader() : \l# consumeExitMemberValue() : \l# consumeExplicitConstructorInvocation(int, int) : \l# triggerRecoveryUponLambdaClosure(Statement, boolean) : boolean\l# replaceAssistStatement(RecoveredElement, ASTNode, int, int, Statement) : Statement\l# assistNodeParent() : ASTNode\l# enclosingNode() : ASTNode\l# isAssistParser() : boolean\l# consumeBlockStatement() : \l# consumeBlockStatements() : \l# consumeFieldDeclaration() : \l# consumeForceNoDiet() : \l# consumeInterfaceHeader() : \l+ consumeNestedLambda() : \l# consumeMethodBody() : \l# consumeMethodDeclaration(boolean, boolean) : \l# consumeMethodHeader() : \l# consumeMethodInvocationName() : \l# consumeMethodInvocationNameWithTypeArguments() : \l# consumeMethodInvocationPrimary() : \l# consumeMethodInvocationPrimaryWithTypeArguments() : \l# consumeMethodInvocationSuper() : \l# consumeMethodInvocationSuperWithTypeArguments() : \l# consumeNestedMethod() : \l# consumeOpenBlock() : \l# consumeOpenFakeBlock() : \l# consumePackageDeclarationName() : \l# consumePackageDeclarationNameWithModifiers() : \l# consumeRestoreDiet() : \l# consumeSingleStaticImportDeclarationName() : \l# consumeSingleTypeImportDeclarationName() : \l# consumeStaticImportOnDemandDeclarationName() : \l# consumeStaticInitializer() : \l# consumeStaticOnly() : \l# consumeToken(int) : \l# consumeTypeImportOnDemandDeclarationName(char, long, int, char, long, char, char, long, char, char, long, char, TypeReference, char, TypeReference, long, char, long, char, long, TypeReference, char, long) : \l# flushAssistState() : \l# flushElementStack() : \l# getTypeReference(int) : TypeReference\l# getAssistTypeReferenceForGenericType(int, int, int) : TypeReference\l# getUnspecifiedReferenceOptimized() : NameReference\l# goForBlockStatementsopt() : \l# goForHeaders() : \l# goForCompilationUnit() : \l# goForBlockStatementsOrCatchHeader() : \l# identifierSubSet(int) : char\l# indexOfAssistIdentifier() : int\l# indexOfAssistIdentifier(boolean) : int\l# initialize() : \l# initialize(boolean) : \l# isIndirectlyInsideFieldInitialization() : boolean\l# isIndirectlyInsideMethod() : boolean\l# isIndirectlyInsideLambdaExpression() : boolean\l# isIndirectlyInsideLambdaBlock() : boolean\l# isIndirectlyInsideType() : boolean\l# isInsideAttributeValue() : boolean\l# isInsideFieldInitialization() : boolean\l# isInsideMethod() : boolean\l# isInsideType() : boolean\l# lastIndexOfElement(int) : int\l# parseBlockStatements(AbstractMethodDeclaration, CompilationUnitDeclaration) : \l# parseBlockStatements(ConstructorDeclaration, CompilationUnitDeclaration) : \l# parseBlockStatements(Initializer, TypeDeclaration, CompilationUnitDeclaration) : \l# parseBlockStatements(MethodDeclaration, CompilationUnitDeclaration) : \l# popElement(int) : \l# popUntilElement(int) : \l# prepareForBlockStatements() : \l# prepareForHeaders() : \l# requireExtendedRecovery() : boolean\l# pushOnElementStack(int) : \l# pushOnElementStack(int, int) : \l# pushOnElementStack(int, int, Object) : \l# recoveryExitFromVariable() : \l# recoveryTokenCheck() : \l# reset() : \l# commit() : \l# assistNodeNeedsStacking() : boolean\l# shouldStackAssistNode() : \l# getNextToken() : int\l# fallBackToSpringForward(Statement) : int\l# resumeAfterRecovery() : int\l# isInsideArrayInitializer(char) : boolean\l# topKnownElementInfo(int) : int\l# topKnownElementInfo(int, int) : int\l# topKnownElementKind(int) : int\l# topKnownElementKind(int, int) : int\l# topKnownElementObjectInfo(int, int) : Object\l# topKnownElementObjectInfo(int) : Object\l# wrapWithExplicitConstructorCallIfNeeded(ASTNode) : ASTNode\l}"
	 ]

	 AssistSourceField [
		 label = "{AssistSourceField|- bindingCache : Map\l- infoCache : Map\l- uniqueKey : String\l- isResolved : boolean\l|# AssistSourceField(JavaElement, String, Map, Map) : \l# getElementInfo(IProgressMonitor) : Object\l# getKey() : String\l# isResolved() : boolean\l# toStringInfo(int, StringBuffer, Object, boolean) : \l# getAnnotation(String) : IAnnotation\l# getType(String, int) : IType\l}"
	 ]

	 AssistSourceMethod [
		 label = "{AssistSourceMethod|- bindingCache : Map\l- infoCache : Map\l- uniqueKey : String\l- isResolved : boolean\l|# AssistSourceMethod(JavaElement, String, String, Map, Map) : \l# getElementInfo(IProgressMonitor) : Object\l# getKey() : String\l# isResolved() : boolean\l# toStringInfo(int, StringBuffer, Object, boolean) : \l# getAnnotation(String) : IAnnotation\l# getType(String, int) : IType\l# getTypeParameter(String) : ITypeParameter\l}"
	 ]

	 AssistSourceType [
		 label = "{AssistSourceType|- bindingCache : Map\l- infoCache : Map\l- uniqueKey : String\l- isResolved : boolean\l|# AssistSourceType(JavaElement, String, Map, Map) : \l# getElementInfo(IProgressMonitor) : Object\l# getFullyQualifiedParameterizedName() : String\l# getKey() : String\l# isResolved() : boolean\l# toStringInfo(int, StringBuffer, Object, boolean) : \l# getAnnotation(String) : IAnnotation\l# getField(String) : IField\l# getInitializer(int) : IInitializer\l# getMethod(String, String) : IMethod\l# getType(String) : IType\l# getType(String, int) : IType\l# getTypeParameter(String) : ITypeParameter\l}"
	 ]

	 AssistTypeParameter [
		 label = "{AssistTypeParameter|- infoCache : Map\l|# AssistTypeParameter(JavaElement, String, Map) : \l# getElementInfo(IProgressMonitor) : Object\l}"
	 ]

	 Engine [
		 label = "{Engine|+ lookupEnvironment : LookupEnvironment\l# unitScope : CompilationUnitScope\l+ nameEnvironment : SearchableEnvironment\l+ options : AssistOptions\l+ compilerOptions : CompilerOptions\l+ forbiddenReferenceIsError : boolean\l+ discouragedReferenceIsError : boolean\l+ importCachesInitialized : boolean\l+ importsCache : char\l+ onDemandImportsCache : ImportBinding\l+ importCacheCount : int\l+ onDemandImportCacheCount : int\l+ currentPackageName : char\l+ getParser : AssistParser\l|# Engine(Map) : \l# accept(IBinaryType, PackageBinding, AccessRestriction) : \l# accept(ICompilationUnit, AccessRestriction) : \l# accept(ISourceType, PackageBinding, AccessRestriction) : \l# initializeImportCaches() : \l# initializePackageCache() : \l# mustQualifyType(char, char, char, int) : boolean\l# parseBlockStatements(CompilationUnitDeclaration, int) : ASTNode\l# parseBlockStatements(TypeDeclaration, CompilationUnitDeclaration, int) : ASTNode\l# reset(boolean) : \l# getTypeSignature(TypeBinding) : char\l# getSignature(MethodBinding) : char\l# getSignature(TypeBinding) : char\l}"
	 ]

	 Keywords [
		 label = "{Keywords||# COUNT() : int\l# ABSTRACT() : char\l# ASSERT() : char\l# BREAK() : char\l# CASE() : char\l# CATCH() : char\l# CLASS() : char\l# CONTINUE() : char\l# DEFAULT() : char\l# DO() : char\l# ELSE() : char\l# ENUM() : char\l# EXTENDS() : char\l# FINAL() : char\l# FINALLY() : char\l# FOR() : char\l# IF() : char\l# IMPLEMENTS() : char\l# IMPORT() : char\l# INSTANCEOF() : char\l# INTERFACE() : char\l# NATIVE() : char\l# NEW() : char\l# PACKAGE() : char\l# PRIVATE() : char\l# PROTECTED() : char\l# PUBLIC() : char\l# RETURN() : char\l# STATIC() : char\l# STRICTFP() : char\l# SUPER() : char\l# SWITCH() : char\l# SYNCHRONIZED() : char\l# THIS() : char\l# THROW() : char\l# THROWS() : char\l# TRANSIENT() : char\l# TRY() : char\l# VOLATILE() : char\l# WHILE() : char\l# TRUE() : char\l# FALSE() : char\l# NULL() : char\l}"
	 ]

	 BooleanConstant [
		 label = "{BooleanConstant|- value : boolean\l- TRUE : BooleanConstant\l- FALSE : BooleanConstant\l|# fromValue(boolean) : Constant\l# BooleanConstant(boolean) : \l# booleanValue() : boolean\l# stringValue() : String\l# toString() : String\l# typeID() : int\l# hashCode() : int\l# equals(Object) : boolean\l}"
	 ]

	 ByteConstant [
		 label = "{ByteConstant|- value : byte\l|# fromValue(byte) : Constant\l# ByteConstant(byte) : \l# byteValue() : byte\l# charValue() : char\l# doubleValue() : double\l# floatValue() : float\l# intValue() : int\l# longValue() : long\l# shortValue() : short\l# stringValue() : String\l# toString() : String\l# typeID() : int\l# hashCode() : int\l# equals(Object) : boolean\l}"
	 ]

	 CharConstant [
		 label = "{CharConstant|- value : char\l|# fromValue(char) : Constant\l# CharConstant(char) : \l# byteValue() : byte\l# charValue() : char\l# doubleValue() : double\l# floatValue() : float\l# intValue() : int\l# longValue() : long\l# shortValue() : short\l# stringValue() : String\l# toString() : String\l# typeID() : int\l# hashCode() : int\l# equals(Object) : boolean\l}"
	 ]

	 CompilerOptions [
		 label = "{CompilerOptions|+ OPTION_LocalVariableAttribute : String\l+ OPTION_LineNumberAttribute : String\l+ OPTION_SourceFileAttribute : String\l+ OPTION_PreserveUnusedLocal : String\l+ OPTION_MethodParametersAttribute : String\l+ OPTION_LambdaGenericSignature : String\l+ OPTION_DocCommentSupport : String\l+ OPTION_ReportMethodWithConstructorName : String\l+ OPTION_ReportOverridingPackageDefaultMethod : String\l+ OPTION_ReportDeprecation : String\l+ OPTION_ReportDeprecationInDeprecatedCode : String\l+ OPTION_ReportDeprecationWhenOverridingDeprecatedMethod : String\l+ OPTION_ReportHiddenCatchBlock : String\l+ OPTION_ReportUnusedLocal : String\l+ OPTION_ReportUnusedParameter : String\l+ OPTION_ReportUnusedExceptionParameter : String\l+ OPTION_ReportUnusedParameterWhenImplementingAbstract : String\l+ OPTION_ReportUnusedParameterWhenOverridingConcrete : String\l+ OPTION_ReportUnusedParameterIncludeDocCommentReference : String\l+ OPTION_ReportUnusedImport : String\l+ OPTION_ReportSyntheticAccessEmulation : String\l+ OPTION_ReportNoEffectAssignment : String\l+ OPTION_ReportLocalVariableHiding : String\l+ OPTION_ReportSpecialParameterHidingField : String\l+ OPTION_ReportFieldHiding : String\l+ OPTION_ReportTypeParameterHiding : String\l+ OPTION_ReportPossibleAccidentalBooleanAssignment : String\l+ OPTION_ReportNonExternalizedStringLiteral : String\l+ OPTION_ReportIncompatibleNonInheritedInterfaceMethod : String\l+ OPTION_ReportUnusedPrivateMember : String\l+ OPTION_ReportNoImplicitStringConversion : String\l+ OPTION_ReportAssertIdentifier : String\l+ OPTION_ReportEnumIdentifier : String\l+ OPTION_ReportNonStaticAccessToStatic : String\l+ OPTION_ReportIndirectStaticAccess : String\l+ OPTION_ReportEmptyStatement : String\l+ OPTION_ReportUnnecessaryTypeCheck : String\l+ OPTION_ReportUnnecessaryElse : String\l+ OPTION_ReportUndocumentedEmptyBlock : String\l+ OPTION_ReportInvalidJavadoc : String\l+ OPTION_ReportInvalidJavadocTags : String\l+ OPTION_ReportInvalidJavadocTagsDeprecatedRef : String\l+ OPTION_ReportInvalidJavadocTagsNotVisibleRef : String\l+ OPTION_ReportInvalidJavadocTagsVisibility : String\l+ OPTION_ReportMissingJavadocTags : String\l+ OPTION_ReportMissingJavadocTagsVisibility : String\l+ OPTION_ReportMissingJavadocTagsOverriding : String\l+ OPTION_ReportMissingJavadocTagsMethodTypeParameters : String\l+ OPTION_ReportMissingJavadocComments : String\l+ OPTION_ReportMissingJavadocTagDescription : String\l+ OPTION_ReportMissingJavadocCommentsVisibility : String\l+ OPTION_ReportMissingJavadocCommentsOverriding : String\l+ OPTION_ReportFinallyBlockNotCompletingNormally : String\l+ OPTION_ReportUnusedDeclaredThrownException : String\l+ OPTION_ReportUnusedDeclaredThrownExceptionWhenOverriding : String\l+ OPTION_ReportUnusedDeclaredThrownExceptionIncludeDocCommentReference : String\l+ OPTION_ReportUnusedDeclaredThrownExceptionExemptExceptionAndThrowable : String\l+ OPTION_ReportUnqualifiedFieldAccess : String\l+ OPTION_ReportUnavoidableGenericTypeProblems : String\l+ OPTION_ReportUncheckedTypeOperation : String\l+ OPTION_ReportRawTypeReference : String\l+ OPTION_ReportFinalParameterBound : String\l+ OPTION_ReportMissingSerialVersion : String\l+ OPTION_ReportVarargsArgumentNeedCast : String\l+ OPTION_ReportUnusedTypeArgumentsForMethodInvocation : String\l+ OPTION_Source : String\l+ OPTION_TargetPlatform : String\l+ OPTION_Compliance : String\l+ OPTION_Encoding : String\l+ OPTION_MaxProblemPerUnit : String\l+ OPTION_TaskTags : String\l+ OPTION_TaskPriorities : String\l+ OPTION_TaskCaseSensitive : String\l+ OPTION_InlineJsr : String\l+ OPTION_ShareCommonFinallyBlocks : String\l+ OPTION_ReportNullReference : String\l+ OPTION_ReportPotentialNullReference : String\l+ OPTION_ReportRedundantNullCheck : String\l+ OPTION_ReportAutoboxing : String\l+ OPTION_ReportAnnotationSuperInterface : String\l+ OPTION_ReportMissingOverrideAnnotation : String\l+ OPTION_ReportMissingOverrideAnnotationForInterfaceMethodImplementation : String\l+ OPTION_ReportMissingDeprecatedAnnotation : String\l+ OPTION_ReportIncompleteEnumSwitch : String\l+ OPTION_ReportMissingEnumCaseDespiteDefault : String\l+ OPTION_ReportMissingDefaultCase : String\l+ OPTION_ReportForbiddenReference : String\l+ OPTION_ReportDiscouragedReference : String\l+ OPTION_SuppressWarnings : String\l+ OPTION_SuppressOptionalErrors : String\l+ OPTION_ReportUnhandledWarningToken : String\l+ OPTION_ReportUnusedTypeParameter : String\l+ OPTION_ReportUnusedWarningToken : String\l+ OPTION_ReportUnusedLabel : String\l+ OPTION_FatalOptionalError : String\l+ OPTION_ReportParameterAssignment : String\l+ OPTION_ReportFallthroughCase : String\l+ OPTION_ReportOverridingMethodWithoutSuperInvocation : String\l+ OPTION_GenerateClassFiles : String\l+ OPTION_Process_Annotations : String\l+ OPTION_Store_Annotations : String\l+ OPTION_EmulateJavacBug8031744 : String\l+ OPTION_ReportRedundantSuperinterface : String\l+ OPTION_ReportComparingIdentical : String\l+ OPTION_ReportMissingSynchronizedOnInheritedMethod : String\l+ OPTION_ReportMissingHashCodeMethod : String\l+ OPTION_ReportDeadCode : String\l+ OPTION_ReportDeadCodeInTrivialIfStatement : String\l+ OPTION_ReportTasks : String\l+ OPTION_ReportUnusedObjectAllocation : String\l+ OPTION_IncludeNullInfoFromAsserts : String\l+ OPTION_ReportMethodCanBeStatic : String\l+ OPTION_ReportMethodCanBePotentiallyStatic : String\l+ OPTION_ReportRedundantSpecificationOfTypeArguments : String\l+ OPTION_ReportUnclosedCloseable : String\l+ OPTION_ReportPotentiallyUnclosedCloseable : String\l+ OPTION_ReportExplicitlyClosedAutoCloseable : String\l+ OPTION_ReportNullSpecViolation : String\l+ OPTION_ReportNullAnnotationInferenceConflict : String\l+ OPTION_ReportNullUncheckedConversion : String\l+ OPTION_ReportRedundantNullAnnotation : String\l+ OPTION_AnnotationBasedNullAnalysis : String\l+ OPTION_NullableAnnotationName : String\l+ OPTION_NonNullAnnotationName : String\l+ OPTION_NonNullByDefaultAnnotationName : String\l+ OPTION_NullableAnnotationSecondaryNames : String\l+ OPTION_NonNullAnnotationSecondaryNames : String\l+ OPTION_NonNullByDefaultAnnotationSecondaryNames : String\l+ OPTION_ReportUninternedIdentityComparison : String\l# DEFAULT_NULLABLE_ANNOTATION_NAME : char\l# DEFAULT_NONNULL_ANNOTATION_NAME : char\l# DEFAULT_NONNULLBYDEFAULT_ANNOTATION_NAME : char\l+ OPTION_ReportMissingNonNullByDefaultAnnotation : String\l+ OPTION_SyntacticNullAnalysisForFields : String\l+ OPTION_InheritNullAnnotations : String\l+ OPTION_ReportNonnullParameterAnnotationDropped : String\l+ GENERATE : String\l+ DO_NOT_GENERATE : String\l+ PRESERVE : String\l+ OPTIMIZE_OUT : String\l+ VERSION_1_1 : String\l+ VERSION_1_2 : String\l+ VERSION_1_3 : String\l+ VERSION_1_4 : String\l+ VERSION_JSR14 : String\l+ VERSION_CLDC1_1 : String\l+ VERSION_1_5 : String\l+ VERSION_1_6 : String\l+ VERSION_1_7 : String\l+ VERSION_1_8 : String\l+ VERSION_1_9 : String\l+ ERROR : String\l+ WARNING : String\l+ INFO : String\l+ IGNORE : String\l+ ENABLED : String\l+ DISABLED : String\l+ PUBLIC : String\l+ PROTECTED : String\l+ DEFAULT : String\l+ PRIVATE : String\l+ RETURN_TAG : String\l+ NO_TAG : String\l+ ALL_STANDARD_TAGS : String\l- NO_STRINGS : String\l+ MethodWithConstructorName : int\l+ OverriddenPackageDefaultMethod : int\l+ UsingDeprecatedAPI : int\l+ MaskedCatchBlock : int\l+ UnusedLocalVariable : int\l+ UnusedArgument : int\l+ NoImplicitStringConversion : int\l+ AccessEmulation : int\l+ NonExternalizedString : int\l+ AssertUsedAsAnIdentifier : int\l+ UnusedImport : int\l+ NonStaticAccessToStatic : int\l+ Task : int\l+ NoEffectAssignment : int\l+ IncompatibleNonInheritedInterfaceMethod : int\l+ UnusedPrivateMember : int\l+ LocalVariableHiding : int\l+ FieldHiding : int\l+ AccidentalBooleanAssign : int\l+ EmptyStatement : int\l+ MissingJavadocComments : int\l+ MissingJavadocTags : int\l+ UnqualifiedFieldAccess : int\l+ UnusedDeclaredThrownException : int\l+ FinallyBlockNotCompleting : int\l+ InvalidJavadoc : int\l+ UnnecessaryTypeCheck : int\l+ UndocumentedEmptyBlock : int\l+ IndirectStaticAccess : int\l+ UnnecessaryElse : int\l+ UncheckedTypeOperation : int\l+ FinalParameterBound : int\l+ MissingSerialVersion : int\l+ EnumUsedAsAnIdentifier : int\l+ ForbiddenReference : int\l+ VarargsArgumentNeedCast : int\l+ NullReference : int\l+ AutoBoxing : int\l+ AnnotationSuperInterface : int\l+ TypeHiding : int\l+ MissingOverrideAnnotation : int\l+ MissingEnumConstantCase : int\l+ MissingDeprecatedAnnotation : int\l+ DiscouragedReference : int\l+ UnhandledWarningToken : int\l+ RawTypeReference : int\l+ UnusedLabel : int\l+ ParameterAssignment : int\l+ FallthroughCase : int\l+ OverridingMethodWithoutSuperInvocation : int\l+ PotentialNullReference : int\l+ RedundantNullCheck : int\l+ MissingJavadocTagDescription : int\l+ UnusedTypeArguments : int\l+ UnusedWarningToken : int\l+ RedundantSuperinterface : int\l+ ComparingIdentical : int\l+ MissingSynchronizedModifierInInheritedMethod : int\l+ ShouldImplementHashcode : int\l+ DeadCode : int\l+ Tasks : int\l+ UnusedObjectAllocation : int\l+ MethodCanBeStatic : int\l+ MethodCanBePotentiallyStatic : int\l+ RedundantSpecificationOfTypeArguments : int\l+ UnclosedCloseable : int\l+ PotentiallyUnclosedCloseable : int\l+ ExplicitlyClosedAutoCloseable : int\l+ NullSpecViolation : int\l+ NullAnnotationInferenceConflict : int\l+ NullUncheckedConversion : int\l+ RedundantNullAnnotation : int\l+ MissingNonNullByDefaultAnnotation : int\l+ MissingDefaultCase : int\l+ UnusedTypeParameter : int\l+ NonnullParameterAnnotationDropped : int\l+ UnusedExceptionParameter : int\l# errorThreshold : IrritantSet\l# warningThreshold : IrritantSet\l# infoThreshold : IrritantSet\l+ produceDebugAttributes : int\l+ produceMethodParameters : boolean\l+ generateGenericSignatureForLambdaExpressions : boolean\l+ complianceLevel : long\l+ originalComplianceLevel : long\l+ sourceLevel : long\l+ originalSourceLevel : long\l+ targetJDK : long\l+ defaultEncoding : String\l+ verbose : boolean\l+ produceReferenceInfo : boolean\l+ preserveAllLocalVariables : boolean\l+ parseLiteralExpressionsAsConstants : boolean\l+ maxProblemsPerUnit : int\l+ taskTags : char\l+ taskPriorities : char\l+ isTaskCaseSensitive : boolean\l+ reportDeprecationInsideDeprecatedCode : boolean\l+ reportDeprecationWhenOverridingDeprecatedMethod : boolean\l+ reportUnusedParameterWhenImplementingAbstract : boolean\l+ reportUnusedParameterWhenOverridingConcrete : boolean\l+ reportUnusedParameterIncludeDocCommentReference : boolean\l+ reportUnusedDeclaredThrownExceptionWhenOverriding : boolean\l+ reportUnusedDeclaredThrownExceptionIncludeDocCommentReference : boolean\l+ reportUnusedDeclaredThrownExceptionExemptExceptionAndThrowable : boolean\l+ reportSpecialParameterHidingField : boolean\l+ reportDeadCodeInTrivialIfStatement : boolean\l+ docCommentSupport : boolean\l+ reportInvalidJavadocTags : boolean\l+ reportInvalidJavadocTagsVisibility : int\l+ reportInvalidJavadocTagsDeprecatedRef : boolean\l+ reportInvalidJavadocTagsNotVisibleRef : boolean\l+ reportMissingJavadocTagDescription : String\l+ reportMissingJavadocTagsVisibility : int\l+ reportMissingJavadocTagsOverriding : boolean\l+ reportMissingJavadocTagsMethodTypeParameters : boolean\l+ reportMissingJavadocCommentsVisibility : int\l+ reportMissingJavadocCommentsOverriding : boolean\l+ inlineJsrBytecode : boolean\l+ shareCommonFinallyBlocks : boolean\l+ suppressWarnings : boolean\l+ suppressOptionalErrors : boolean\l+ treatOptionalErrorAsFatal : boolean\l+ performMethodsFullRecovery : boolean\l+ performStatementsRecovery : boolean\l+ processAnnotations : boolean\l+ storeAnnotations : boolean\l+ reportMissingOverrideAnnotationForInterfaceMethodImplementation : boolean\l+ generateClassFiles : boolean\l+ ignoreMethodBodies : boolean\l+ includeNullInfoFromAsserts : boolean\l+ reportUnavoidableGenericTypeProblems : boolean\l+ ignoreSourceFolderWarningOption : boolean\l+ isAnnotationBasedNullAnalysisEnabled : boolean\l+ nullableAnnotationName : char\l+ nonNullAnnotationName : char\l+ nonNullByDefaultAnnotationName : char\l+ nullableAnnotationSecondaryNames : String\l+ nonNullAnnotationSecondaryNames : String\l+ nonNullByDefaultAnnotationSecondaryNames : String\l+ intendedDefaultNonNullness : long\l+ analyseResourceLeaks : boolean\l+ reportMissingEnumCaseDespiteDefault : boolean\l+ tolerateIllegalAmbiguousVarargsInvocation : boolean\l+ inheritNullAnnotations : boolean\l+ enableSyntacticNullAnalysisForFields : boolean\l+ complainOnUninternedIdentityComparison : boolean\l+ emulateJavacBug8031744 : boolean\l+ useNullTypeAnnotations : Boolean\l+ warningTokens : String\l|# null() : \l# CompilerOptions() : \l# CompilerOptions(Map) : \l# CompilerOptions(Map, boolean) : \l# optionKeyFromIrritant(int) : String\l# versionFromJdkLevel(long) : String\l# versionToJdkLevel(String) : long\l# warningOptionNames() : String\l# warningTokenFromIrritant(int) : String\l# warningTokenToIrritants(String) : IrritantSet\l# getMap() : Map\l# getSeverity(int) : int\l# getSeverityString(int) : String\l# getVisibilityString(int) : String\l# isAnyEnabled(IrritantSet) : boolean\l# resetDefaults() : \l# set(Map) : \l# stringToNameList(String) : String\l# nameListToString(String) : String\l# toString() : String\l# updateSeverity(int, Object) : \l# usesNullTypeAnnotations() : boolean\l}"
	 ]

	 CompilerStats [
		 label = "{CompilerStats|+ startTime : long\l+ endTime : long\l+ lineCount : long\l+ parseTime : long\l+ resolveTime : long\l+ analyzeTime : long\l+ generateTime : long\l|# elapsedTime() : long\l# compareTo(Object) : int\l}"
	 ]

	 Constant [
		 label = "{Constant|+ NotAConstant : Constant\l+ typeID : int\l|# booleanValue() : boolean\l# byteValue() : byte\l# castTo(int) : Constant\l# charValue() : char\l# computeConstantOperation(Constant, int, int) : Constant\l# computeConstantOperation(Constant, int, int, Constant, int) : Constant\l# computeConstantOperationAND(Constant, int, Constant, int) : Constant\l# computeConstantOperationAND_AND(Constant, int, Constant, int) : Constant\l# computeConstantOperationDIVIDE(Constant, int, Constant, int) : Constant\l# computeConstantOperationEQUAL_EQUAL(Constant, int, Constant, int) : Constant\l# computeConstantOperationGREATER(Constant, int, Constant, int) : Constant\l# computeConstantOperationGREATER_EQUAL(Constant, int, Constant, int) : Constant\l# computeConstantOperationLEFT_SHIFT(Constant, int, Constant, int) : Constant\l# computeConstantOperationLESS(Constant, int, Constant, int) : Constant\l# computeConstantOperationLESS_EQUAL(Constant, int, Constant, int) : Constant\l# computeConstantOperationMINUS(Constant, int, Constant, int) : Constant\l# computeConstantOperationMULTIPLY(Constant, int, Constant, int) : Constant\l# computeConstantOperationOR(Constant, int, Constant, int) : Constant\l# computeConstantOperationOR_OR(Constant, int, Constant, int) : Constant\l# computeConstantOperationPLUS(Constant, int, Constant, int) : Constant\l# computeConstantOperationREMAINDER(Constant, int, Constant, int) : Constant\l# computeConstantOperationRIGHT_SHIFT(Constant, int, Constant, int) : Constant\l# computeConstantOperationUNSIGNED_RIGHT_SHIFT(Constant, int, Constant, int) : Constant\l# computeConstantOperationXOR(Constant, int, Constant, int) : Constant\l# doubleValue() : double\l# floatValue() : float\l# hasSameValue(Constant) : boolean\l# intValue() : int\l# longValue() : long\l# shortValue() : short\l# stringValue() : String\l# toString() : String\l# typeName() : String\l}"
	 ]

	 DoubleConstant [
		 label = "{DoubleConstant|- value : double\l|# fromValue(double) : Constant\l# DoubleConstant(double) : \l# byteValue() : byte\l# charValue() : char\l# doubleValue() : double\l# floatValue() : float\l# intValue() : int\l# longValue() : long\l# shortValue() : short\l# stringValue() : String\l# toString() : String\l# typeID() : int\l# hashCode() : int\l# equals(Object) : boolean\l}"
	 ]

	 FloatConstant [
		 label = "{FloatConstant|# value : float\l|# fromValue(float) : Constant\l# FloatConstant(float) : \l# byteValue() : byte\l# charValue() : char\l# doubleValue() : double\l# floatValue() : float\l# intValue() : int\l# longValue() : long\l# shortValue() : short\l# stringValue() : String\l# toString() : String\l# typeID() : int\l# hashCode() : int\l# equals(Object) : boolean\l}"
	 ]

	 IntConstant [
		 label = "{IntConstant|# value : int\l- MIN_VALUE : IntConstant\l- MINUS_FOUR : IntConstant\l- MINUS_THREE : IntConstant\l- MINUS_TWO : IntConstant\l- MINUS_ONE : IntConstant\l- ZERO : IntConstant\l- ONE : IntConstant\l- TWO : IntConstant\l- THREE : IntConstant\l- FOUR : IntConstant\l- FIVE : IntConstant\l- SIX : IntConstant\l- SEVEN : IntConstant\l- EIGHT : IntConstant\l- NINE : IntConstant\l- TEN : IntConstant\l|# fromValue(int) : Constant\l# IntConstant(int) : \l# byteValue() : byte\l# charValue() : char\l# doubleValue() : double\l# floatValue() : float\l# intValue() : int\l# longValue() : long\l# shortValue() : short\l# stringValue() : String\l# toString() : String\l# typeID() : int\l# hashCode() : int\l# equals(Object) : boolean\l}"
	 ]

	 IrritantSet [
		 label = "{IrritantSet|+ GROUP_MASK : int\l+ GROUP_SHIFT : int\l+ GROUP_MAX : int\l+ GROUP0 : int\l+ GROUP1 : int\l+ GROUP2 : int\l+ ALL : IrritantSet\l+ BOXING : IrritantSet\l+ CAST : IrritantSet\l+ DEPRECATION : IrritantSet\l+ DEP_ANN : IrritantSet\l+ FALLTHROUGH : IrritantSet\l+ FINALLY : IrritantSet\l+ HIDING : IrritantSet\l+ INCOMPLETE_SWITCH : IrritantSet\l+ NLS : IrritantSet\l+ NULL : IrritantSet\l+ RAW : IrritantSet\l+ RESTRICTION : IrritantSet\l+ SERIAL : IrritantSet\l+ STATIC_ACCESS : IrritantSet\l+ STATIC_METHOD : IrritantSet\l+ SYNTHETIC_ACCESS : IrritantSet\l+ SYNCHRONIZED : IrritantSet\l+ SUPER : IrritantSet\l+ UNUSED : IrritantSet\l+ UNCHECKED : IrritantSet\l+ UNQUALIFIED_FIELD_ACCESS : IrritantSet\l+ RESOURCE : IrritantSet\l+ JAVADOC : IrritantSet\l+ COMPILER_DEFAULT_ERRORS : IrritantSet\l+ COMPILER_DEFAULT_WARNINGS : IrritantSet\l+ COMPILER_DEFAULT_INFOS : IrritantSet\l- bits : int\l|# null() : \l# IrritantSet(int) : \l# IrritantSet(IrritantSet) : \l# areAllSet() : boolean\l# clear(int) : IrritantSet\l# clearAll() : IrritantSet\l# initialize(int) : \l# initialize(IrritantSet) : \l# isAnySet(IrritantSet) : boolean\l# hasSameIrritants(IrritantSet) : boolean\l# isSet(int) : boolean\l# set(int) : IrritantSet\l# set(IrritantSet) : IrritantSet\l# setAll() : IrritantSet\l}"
	 ]

	 ITypeRequestor [
		 label = "{ITypeRequestor||# accept(IBinaryType, PackageBinding, AccessRestriction) : \l# accept(ICompilationUnit, AccessRestriction) : \l# accept(ISourceType, PackageBinding, AccessRestriction) : \l}"
	 ]

	 LongConstant [
		 label = "{LongConstant|- ZERO : LongConstant\l- MIN_VALUE : LongConstant\l- value : long\l|# fromValue(long) : Constant\l# LongConstant(long) : \l# byteValue() : byte\l# charValue() : char\l# doubleValue() : double\l# floatValue() : float\l# intValue() : int\l# longValue() : long\l# shortValue() : short\l# stringValue() : String\l# toString() : String\l# typeID() : int\l# hashCode() : int\l# equals(Object) : boolean\l}"
	 ]

	 ReferenceContext [
		 label = "{ReferenceContext||# abort(int, CategorizedProblem) : \l# compilationResult() : CompilationResult\l# getCompilationUnitDeclaration() : CompilationUnitDeclaration\l# hasErrors() : boolean\l# tagAsHavingErrors() : \l# tagAsHavingIgnoredMandatoryErrors(int) : \l}"
	 ]

	 ShortConstant [
		 label = "{ShortConstant|- value : short\l|# fromValue(short) : Constant\l# ShortConstant(short) : \l# byteValue() : byte\l# charValue() : char\l# doubleValue() : double\l# floatValue() : float\l# intValue() : int\l# longValue() : long\l# shortValue() : short\l# stringValue() : String\l# toString() : String\l# typeID() : int\l# hashCode() : int\l# equals(Object) : boolean\l}"
	 ]

	 StringConstant [
		 label = "{StringConstant|- value : String\l|# fromValue(String) : Constant\l# StringConstant(String) : \l# stringValue() : String\l# toString() : String\l# typeID() : int\l# hashCode() : int\l# equals(Object) : boolean\l}"
	 ]

	 BooleanConstant [
		 label = "{BooleanConstant|# value : boolean\l|# BooleanConstant(boolean) : \l# booleanValue() : boolean\l# stringValue() : String\l# toString() : String\l# typeID() : int\l}"
	 ]

	 ByteConstant [
		 label = "{ByteConstant|# value : byte\l|# ByteConstant(byte) : \l# byteValue() : byte\l# charValue() : char\l# doubleValue() : double\l# floatValue() : float\l# intValue() : int\l# longValue() : long\l# shortValue() : short\l# stringValue() : String\l# toString() : String\l# typeID() : int\l}"
	 ]

	 CharConstant [
		 label = "{CharConstant|# value : char\l|# CharConstant(char) : \l# byteValue() : byte\l# charValue() : char\l# doubleValue() : double\l# floatValue() : float\l# intValue() : int\l# longValue() : long\l# shortValue() : short\l# stringValue() : String\l# toString() : String\l# typeID() : int\l}"
	 ]

	 CompilerOptions [
		 label = "{CompilerOptions|+ OPTION_LocalVariableAttribute : String\l+ OPTION_LineNumberAttribute : String\l+ OPTION_SourceFileAttribute : String\l+ OPTION_PreserveUnusedLocal : String\l+ OPTION_DocCommentSupport : String\l+ OPTION_ReportMethodWithConstructorName : String\l+ OPTION_ReportOverridingPackageDefaultMethod : String\l+ OPTION_ReportDeprecation : String\l+ OPTION_ReportDeprecationInDeprecatedCode : String\l+ OPTION_ReportDeprecationWhenOverridingDeprecatedMethod : String\l+ OPTION_ReportHiddenCatchBlock : String\l+ OPTION_ReportUnusedLocal : String\l+ OPTION_ReportUnusedParameter : String\l+ OPTION_ReportUnusedParameterWhenImplementingAbstract : String\l+ OPTION_ReportUnusedParameterWhenOverridingConcrete : String\l+ OPTION_ReportUnusedImport : String\l+ OPTION_ReportSyntheticAccessEmulation : String\l+ OPTION_ReportNoEffectAssignment : String\l+ OPTION_ReportLocalVariableHiding : String\l+ OPTION_ReportSpecialParameterHidingField : String\l+ OPTION_ReportFieldHiding : String\l+ OPTION_ReportPossibleAccidentalBooleanAssignment : String\l+ OPTION_ReportNonExternalizedStringLiteral : String\l+ OPTION_ReportIncompatibleNonInheritedInterfaceMethod : String\l+ OPTION_ReportUnusedPrivateMember : String\l+ OPTION_ReportNoImplicitStringConversion : String\l+ OPTION_ReportAssertIdentifier : String\l+ OPTION_ReportEnumIdentifier : String\l+ OPTION_ReportNonStaticAccessToStatic : String\l+ OPTION_ReportIndirectStaticAccess : String\l+ OPTION_ReportEmptyStatement : String\l+ OPTION_ReportUnnecessaryTypeCheck : String\l+ OPTION_ReportUnnecessaryElse : String\l+ OPTION_ReportUndocumentedEmptyBlock : String\l+ OPTION_ReportInvalidJavadoc : String\l+ OPTION_ReportInvalidJavadocTags : String\l+ OPTION_ReportInvalidJavadocTagsVisibility : String\l+ OPTION_ReportMissingJavadocTags : String\l+ OPTION_ReportMissingJavadocTagsVisibility : String\l+ OPTION_ReportMissingJavadocTagsOverriding : String\l+ OPTION_ReportMissingJavadocComments : String\l+ OPTION_ReportMissingJavadocCommentsVisibility : String\l+ OPTION_ReportMissingJavadocCommentsOverriding : String\l+ OPTION_ReportFinallyBlockNotCompletingNormally : String\l+ OPTION_ReportUnusedDeclaredThrownException : String\l+ OPTION_ReportUnusedDeclaredThrownExceptionWhenOverriding : String\l+ OPTION_ReportUnqualifiedFieldAccess : String\l+ OPTION_ReportUnsafeTypeOperation : String\l+ OPTION_ReportFinalParameterBound : String\l+ OPTION_ReportMissingSerialVersion : String\l+ OPTION_ReportForbiddenReference : String\l+ OPTION_Source : String\l+ OPTION_TargetPlatform : String\l+ OPTION_Compliance : String\l+ OPTION_Encoding : String\l+ OPTION_MaxProblemPerUnit : String\l+ OPTION_TaskTags : String\l+ OPTION_TaskPriorities : String\l+ OPTION_TaskCaseSensitive : String\l+ OPTION_InlineJsr : String\l+ OPTION_ReportInvalidAnnotation : String\l+ OPTION_ReportMissingAnnotation : String\l+ OPTION_ReportMissingJavadoc : String\l+ OPTION_PrivateConstructorAccess : String\l+ GENERATE : String\l+ DO_NOT_GENERATE : String\l+ PRESERVE : String\l+ OPTIMIZE_OUT : String\l+ VERSION_1_1 : String\l+ VERSION_1_2 : String\l+ VERSION_1_3 : String\l+ VERSION_1_4 : String\l+ VERSION_1_5 : String\l+ ERROR : String\l+ WARNING : String\l+ IGNORE : String\l+ ENABLED : String\l+ DISABLED : String\l+ PUBLIC : String\l+ PROTECTED : String\l+ DEFAULT : String\l+ PRIVATE : String\l+ MethodWithConstructorName : long\l+ OverriddenPackageDefaultMethod : long\l+ UsingDeprecatedAPI : long\l+ MaskedCatchBlock : long\l+ UnusedLocalVariable : long\l+ UnusedArgument : long\l+ NoImplicitStringConversion : long\l+ AccessEmulation : long\l+ NonExternalizedString : long\l+ AssertUsedAsAnIdentifier : long\l+ UnusedImport : long\l+ NonStaticAccessToStatic : long\l+ Task : long\l+ NoEffectAssignment : long\l+ IncompatibleNonInheritedInterfaceMethod : long\l+ UnusedPrivateMember : long\l+ LocalVariableHiding : long\l+ FieldHiding : long\l+ AccidentalBooleanAssign : long\l+ EmptyStatement : long\l+ MissingJavadocComments : long\l+ MissingJavadocTags : long\l+ UnqualifiedFieldAccess : long\l+ UnusedDeclaredThrownException : long\l+ FinallyBlockNotCompleting : long\l+ InvalidJavadoc : long\l+ UnnecessaryTypeCheck : long\l+ UndocumentedEmptyBlock : long\l+ IndirectStaticAccess : long\l+ UnnecessaryElse : long\l+ UnsafeTypeOperation : long\l+ FinalParameterBound : long\l+ MissingSerialVersion : long\l+ EnumUsedAsAnIdentifier : long\l+ ForbiddenReference : long\l+ errorThreshold : long\l+ warningThreshold : long\l+ Source : int\l+ Lines : int\l+ Vars : int\l+ produceDebugAttributes : int\l+ complianceLevel : long\l+ sourceLevel : long\l+ targetJDK : long\l+ isPrivateConstructorAccessChangingVisibility : boolean\l+ defaultEncoding : String\l+ verbose : boolean\l+ produceReferenceInfo : boolean\l+ preserveAllLocalVariables : boolean\l+ parseLiteralExpressionsAsConstants : boolean\l+ maxProblemsPerUnit : int\l+ taskTags : char\l+ taskPriorites : char\l+ isTaskCaseSensitive : boolean\l+ reportDeprecationInsideDeprecatedCode : boolean\l+ reportDeprecationWhenOverridingDeprecatedMethod : boolean\l+ reportUnusedParameterWhenImplementingAbstract : boolean\l+ reportUnusedParameterWhenOverridingConcrete : boolean\l+ reportUnusedDeclaredThrownExceptionWhenOverriding : boolean\l+ reportSpecialParameterHidingField : boolean\l+ reportInvalidJavadocTagsVisibility : int\l+ reportInvalidJavadocTags : boolean\l+ reportMissingJavadocTagsVisibility : int\l+ reportMissingJavadocTagsOverriding : boolean\l+ reportMissingJavadocCommentsVisibility : int\l+ reportMissingJavadocCommentsOverriding : boolean\l+ inlineJsrBytecode : boolean\l+ docCommentSupport : boolean\l|# CompilerOptions() : \l# CompilerOptions(Map) : \l# getMap() : Map\l# getSeverity(long) : int\l# getSeverityString(long) : String\l# getVisibilityString(int) : String\l# set(Map) : \l# toString() : String\l# updateSeverity(long, Object) : \l# versionToJdkLevel(Object) : long\l# versionFromJdkLevel(long) : String\l}"
	 ]

	 Constant [
		 label = "{Constant|+ NotAConstant : Constant\l+ Zero : IntConstant\l+ Two : IntConstant\l+ One : IntConstant\l+ typeID : int\l|# booleanValue() : boolean\l# byteValue() : byte\l# castTo(int) : Constant\l# char