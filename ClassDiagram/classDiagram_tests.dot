digraph ClassDiagram {
	 fontname = "Bitstream Vera Sans"
	 fontsize = 8

	 node [
		 fontname = "Bistream Vera Sans"
		 fontsize = 8
		 shape = "record"
	 ]

	 edge [
		 fontname = "Bistream Vera Sans"
		 fontsize = 8
	 ]

	 Apt6TestsPlugin [
		 label = "{Apt6TestsPlugin|+ PLUGIN_ID : String\l- _thePlugin : Apt6TestsPlugin\l|+ start(BundleContext) : \l# Apt6TestsPlugin() : \l# thePlugin() : Apt6TestsPlugin\l}"
	 ]

	 BuilderTests [
		 label = "{BuilderTests||# BuilderTests(String) : \l# suite() : Test\l# testFinalRound() : \l# disabled_testInheritedAnnotation() : \l# testBug295948() : \l# testBug407841() : \l# testBug419769() : \l# testBug387956() : \l# testBatchedBuild() : \l# testBug468853() : \l}"
	 ]

	 FilerTests [
		 label = "{FilerTests||# FilerTests(String) : \l# suite() : Test\l# testCreateSourceFile() : \l# testCreateSourceFileWithGenReference() : \l# testBug269934() : \l# testGetResource01() : \l# testGetResource02() : \l# testCreateNonSourceFile() : \l# testNullParents() : \l# testURI() : \l# testGetCharContentLarge() : \l}"
	 ]

	 IdeTestUtils [
		 label = "{IdeTestUtils|+ RESOURCES_DIR : String\l|# copyResources(IProject, String, String) : \l# getPluginDirectoryPath() : String\l# copyResource(File, File) : \l# copyResources(File, File) : \l# read(java) : byte\l# shouldConvertToIndependentLineDelimiter(File) : boolean\l}"
	 ]

	 InfrastructureTests [
		 label = "{InfrastructureTests||# InfrastructureTests(String) : \l# suite() : Test\l# testPluginLoaded() : \l# testProjectBuild() : \l# testFactoryPathContents() : \l}"
	 ]

	 ModelTests [
		 label = "{ModelTests||# ModelTests(String) : \l# suite() : Test\l# testFieldType() : \l# testMethodType() : \l# testInfoProblems() : \l# testMethodParameters() : \l# keepBinaryOnly(IJavaProject, String, String) : \l# canRunJava8() : boolean\l}"
	 ]

	 PerformanceTests [
		 label = "{PerformanceTests|- VERBOSE : boolean\l- PAUSE_EVERY : int\l- PAUSE_TIME : int\l- INCLUDE_APT_DISABLED : boolean\l- CMD_PROFILER_PREFIX : String\l- CMD_START_CPU_PROFILING : String\l- CMD_STOP_CPU_PROFILING : String\l- CMD_PERF_SNAPSHOT : String\l- CMD_HEAP_SNAPSHOT : String\l|# PerformanceTests(String) : \l# suite() : Test\l# setUp() : \l# createBoringFiles(int, IJavaProject) : \l# createInterestingFilesWithJ6(int, IJavaProject) : \l# createGeneratingFiles(int, IJavaProject) : \l# createFiles(int, String, String, IJavaProject) : \l# testBoringFiles() : \l# _testInterestingFilesWithJ6() : \l# _testGeneratingLotsOfFiles() : \l}"
	 ]

	 ProcessorTestStatus [
		 label = "{ProcessorTestStatus|+ NO_ERRORS : String\l+ NOT_RUN : String\l- s_errorStatus : String\l- s_processorRan : boolean\l|# failWithoutException(String) : \l# hasErrors() : boolean\l# getErrors() : String\l# reset() : \l# processorRan() : boolean\l# setProcessorRan() : \l# ProcessorTestStatus() : \l# assertEquals(String, Object, Object) : \l# assertEquals(String, String, String) : \l# assertEquals(String, int, int) : \l# assertTrue(String, boolean) : \l# fail(String) : \l}"
	 ]

	 ScalingTests [
		 label = "{ScalingTests|- VERBOSE : boolean\l|# ScalingTests(String) : \l# suite() : Test\l# setUp() : \l# testGeneratingLotsOfFiles() : \l}"
	 ]

	 TestAll [
		 label = "{TestAll||# TestAll(String) : \l# suite() : Test\l}"
	 ]

	 TestBase [
		 label = "{TestBase|# JAVA_16_COMPLIANCE : String\l# JAVA_18_COMPLIANCE : String\l# _projectName : String\l# _projectSerial : int\l|# TestBase(String) : \l# suite() : Test\l# addAnnotationJar(IJavaProject) : \l# createJavaProject(String) : IJavaProject\l# createJava8Project(String) : IJavaProject\l# disableJava5Factories(IJavaProject) : \l# expectingFile(IProject, String) : \l# expectingNoFile(IProject, String) : \l+ setUp() : \l}"
	 ]

	 TestUtils [
		 label = "{TestUtils||# concatPath(String) : File\l# convertToIndependentLineDelimiter(String) : String\l}"
	 ]

	 AnnotationValueConversionTests [
		 label = "{AnnotationValueConversionTests|- counter : int\l- projectName : String\l|# AnnotationValueConversionTests(String) : \l# suite() : Test\l# getUniqueProjectName() : String\l# getSourcePath() : IPath\l# getBinaryPath() : IPath\l# getOutputPath() : IPath\l# setupTest() : IProject\l# testByteConversion() : \l# testByteConversion_Reflection() : \l# testShortConversion() : \l# testShortConversion_Reflection() : \l# testCharConversion() : \l# testCharConversion_Reflection() : \l# testIntConversion() : \l# testIntConversion_Reflection() : \l# testLongConversion() : \l# testLongConversion_Reflection() : \l# testFloatConversion() : \l# testFloatConversion_Reflection() : \l# testDoubleConversion() : \l# testDoubleConversion_Reflection() : \l# testArrayification() : \l# testArrayification_Reflection() : \l# testArrayElementConversion() : \l# testArrayElementConversion_Reflection() : \l# testErrorStringValue() : \l# testErrorStringValue_Reflection() : \l# testMissingPrimitiveTypeValues_Reflection() : \l}"
	 ]

	 AnnotationValueTests [
		 label = "{AnnotationValueTests||# AnnotationValueTests(String) : \l# suite() : Test\l# setupTest() : IProject\l# addTriggerSource() : \l# testAnnotationValueProcessor() : \l}"
	 ]

	 LogListener [
		 label = "{LogListener|- _messages : List\l- _logListener : LogListener\l|# null() : \l# logging(IStatus, String) : \l# clear() : \l# getList() : List\l# APITests(String) : \l# suite() : Test\l+ setUp() : \l+ tearDown() : \l# testAptUtil() : \l# testMessagerAPI() : \l# checkMessagerAnnotationLogEntry(String, int, int) : \l}"
	 ]

	 AptBuilderTests [
		 label = "{AptBuilderTests||# AptBuilderTests(String) : \l# suite() : Test\l# setUp() : \l# getProjectName_ProjectRootAsSrcDir() : String\l# getSourcePath(String) : IPath\l# testGeneratedFileInBuilder() : \l# testGeneratedFileInBuilder_ProjectRootAsSourceDir() : \l# testGeneratedFileInBuilder1() : \l# _testGeneratedFileInBuilder0(String) : \l# _testGeneratedFileInBuilder1(String) : \l# testGeneratingIllegalTypeName() : \l# testTwoAnnotations() : \l# testNestedGeneratedFileInBuilder() : \l# testExtraDependencies() : \l# testCaching() : \l# testDeletedParentFile() : \l# testStopGeneratingFileInBuilder_FullBuild() : \l# testStopGeneratingFileInBuilder_IncrementalBuild() : \l# internalTestStopGeneratingFileInBuilder(boolean) : \l# testAPTRounding() : \l# testConfigMarker() : \l# testDeletedGeneratedSourceFolder() : \l}"
	 ]

	 AptReconcileTests [
		 label = "{AptReconcileTests|# _jproject : IJavaProject\l# _workingCopy : ICompilationUnit\l# _problemRequestor : ProblemRequestor\l- _testProject : String\l- _testFolder : String\l- _testProjectNum : int\l- TEST_PROJECT : String\l|# AptReconcileTests(String) : \l# suite() : Test\l# testGeneratedFile() : \l# testNestedGeneratedFile() : \l# testStopGeneratingFileInReconciler() : \l# testDiscardParentWorkingCopy() : \l# testBasicReconcile() : \l# testNoReconcile() : \l# setUp() : \l# tearDown() : \l# setWorkingCopyContents(String) : \l+ setUpWorkingCopy(String, String) : \l# assertProblems(String, String) : \l}"
	 ]

	 APTTestBase [
		 label = "{APTTestBase|- _jproj : IJavaProject\l|# APTTestBase(String) : \l# setUp() : \l# getCurrentJavaProject() : IJavaProject\l# createJavaProject(String) : IJavaProject\l# tearDown() : \l# runFinalizers() : \l# getProjectName() : String\l# getSourcePath() : IPath\l# concate(String) : String\l# concate(IMarker) : String\l# clearProcessorResult(Class) : \l# checkProcessorResult(Class) : String\l# getProcessorResult(Class) : String\l# expectingMarkers(String) : \l# expectingNoMarkers() : \l# expectingNoMarkers(IPath) : \l# getAllAPTMarkers(IPath) : IMarker\l# expectingOnlySpecificProblemsFor(IPath, ExpectedProblem) : \l# expectingSpecificProblemsFor(IPath, ExpectedProblem) : \l# expectingOnlySpecificProblemFor(IPath, ExpectedProblem) : \l# sleep(long) : \l}"
	 ]

	 DeclarationVisitorImpl [
		 label = "{DeclarationVisitorImpl|# called : boolean\l# testCaseIdentifier : Cases\l# declarationsVisited : ArrayList\l# code : String\l|# DeclarationVisitorTests(String) : \l# suite() : Test\l# testPackageDeclarationVisitor() : \l# testClassDeclarationVisitor() : \l# testEnumDeclarationVisitor() : \l# testInterfaceDeclarationVisitor() : \l# testAnnotationTypeDeclarationVisitor() : \l# testFieldDeclarationVisitor() : \l# testEnumConstantDeclarationVisitor() : \l# testConstructorDeclarationVisitor() : \l# testMethodDeclarationVisitor() : \l# testAnnotationTypeElementDeclarationVisitor() : \l# testParameterDeclarationVisitor() : \l# testTypeParameterDeclarationVisitor() : \l# runProcessorBasedTest() : \l# null() : \l# _process() : \l# null() : \l# visitDeclaration(Declaration) : \l# visitPackageDeclaration(PackageDeclaration) : \l# visitMemberDeclaration(MemberDeclaration) : \l# visitTypeDeclaration(TypeDeclaration) : \l# visitClassDeclaration(ClassDeclaration) : \l# visitEnumDeclaration(EnumDeclaration) : \l# visitInterfaceDeclaration(InterfaceDeclaration) : \l# visitAnnotationTypeDeclaration(AnnotationTypeDeclaration) : \l# visitFieldDeclaration(FieldDeclaration) : \l# visitEnumConstantDeclaration(EnumConstantDeclaration) : \l# visitExecutableDeclaration(ExecutableDeclaration) : \l# visitConstructorDeclaration(ConstructorDeclaration) : \l# visitMethodDeclaration(MethodDeclaration) : \l# visitAnnotationTypeElementDeclaration(AnnotationTypeElementDeclaration) : \l# visitParameterDeclaration(ParameterDeclaration) : \l# visitTypeParameterDeclaration(TypeParameterDeclaration) : \l# null() : \l# declarationVisited(Declaration) : \l# initDeclVisitList() : \l}"
	 ]

	 ExceptionHandlingTests [
		 label = "{ExceptionHandlingTests||# ExceptionHandlingTests(String) : \l# suite() : Test\l# testWrapperClassForPrimitiveValue() : \l# testOtherPrimitiveForBooleanValue() : \l# testStringForBooleanValue() : \l# testArrayForBooleanValue() : \l# testPrimitiveForStringValue() : \l# testOtherClassForStringValue() : \l# testArrayForStringValue() : \l# testPrimitiveForArrayValue() : \l# testNonArrayForArrayValue() : \l# testAnnotationForEnumArrayValue() : \l# getCodeForTest(String) : String\l}"
	 ]

	 ExpectedProblem [
		 label = "{ExpectedProblem|- _location : String\l- _message : String\l- _resourcePath : IPath\l- _start : int\l- _end : int\l|# ExpectedProblem(String, String, IPath) : \l# ExpectedProblem(String, String, IPath, int, int) : \l# getLocation() : String\l# equalsProblem(Problem) : boolean\l# toString() : String\l}"
	 ]

	 FactoryLoaderTests [
		 label = "{FactoryLoaderTests|- _extJar : File\l- _extVarJar : IPath\l- _projectPath : IPath\l- TEMPJARDIR_CPVAR : String\l|# FactoryLoaderTests(String) : \l# suite() : Test\l# setUp() : \l# testExternalJarLoader() : \l# testNonexistentEntry() : \l+ tearDown() : \l}"
	 ]

	 FileGenerationTests [
		 label = "{FileGenerationTests||# FileGenerationTests(String) : \l# suite() : Test\l# testSourceGenPackages() : \l# testSourceGenOverwrite() : \l# testSourceGenAfterDirChange() : \l# testSourceGenSubDir() : \l# testTextFileGen() : \l# testIsGeneratedOrParentFile() : \l}"
	 ]

	 JavaVersionTests [
		 label = "{JavaVersionTests||# JavaVersionTests(String) : \l# suite() : Test\l# setUp() : \l# getProjectName() : String\l# getSourcePath() : IPath\l# testMirror() : \l}"
	 ]

	 ListenerTests [
		 label = "{ListenerTests||# ListenerTests(String) : \l# suite() : Test\l# testListenerCalled() : \l}"
	 ]

	 PackageInfoProc [
		 label = "{PackageInfoProc|# called : boolean\l# called : boolean\l# called : boolean\l|# MirrorDeclarationTests(String) : \l# suite() : Test\l# setUp() : \l# testMirrorDeclaration() : \l# testFieldConstant() : \l# DISABLED_testDefault() : \l# testUnresolvableDeclarations0() : \l# testUnresolvableDeclarations1() : \l# testLocation() : \l# testSourceMirror() : \l# testPackageInfo() : \l# null() : \l# _process() : \l# null() : \l# _process() : \l# null() : \l# _process() : \l# testEnvFactory() : \l}"
	 ]

	 MirrorTests [
		 label = "{MirrorTests||# MirrorTests(String) : \l# suite() : Test\l# testMirror() : \l# testTypeParmaterAPI() : \l}"
	 ]

	 MirrorUtilTests [
		 label = "{MirrorUtilTests||# MirrorUtilTests(String) : \l# suite() : Test\l# setUp() : \l# addEnvOptions(IJavaProject) : \l# assertNoUnexpectedProblems() : \l# testMirrorUtils() : \l}"
	 ]

	 MixedModeTesting [
		 label = "{MixedModeTesting|- _extJar : File\l|# MixedModeTesting(String) : \l# suite() : Test\l# setUp() : \l# testSimpleBatchProcessing() : \l# testAPTRoundingInMixedMode0() : \l# testAPTRoundingInMixedMode1() : \l}"
	 ]

	 PerfTests [
		 label = "{PerfTests|- projectPath : IPath\l|# PerfTests(String) : \l# suite() : Test\l# setUp() : \l# assertNoUnexpectedProblems() : \l# getProjectName() : String\l# getSourcePath() : IPath\l# testBuilding() : \l}"
	 ]

	 PreferencesTests [
		 label = "{PreferencesTests|- JAR_PATH_1 : String\l- JAR_PATH_2 : String\l- serializedFactories : String\l|# PreferencesTests(String) : \l# suite() : Test\l# testFactoryPathEncodingAndDecoding() : \l# null() : \l# testSimpleConfigApi() : \l# testAutomaticOptions() : \l# testGenSrcDir() : \l# testConfigGenSrcDir() : \l# isOnClasspath(IJavaProject, IPath) : boolean\l}"
	 ]

	 ReadAnnotationTests [
		 label = "{ReadAnnotationTests||# ReadAnnotationTests(String) : \l# suite() : Test\l# addAllSources() : \l# addQuestionSources() : \l# addNoTypeSources() : \l# addTriggerSource() : \l# setupTest() : IProject\l# test0() : \l# test1() : \l}"
	 ]

	 BindingRequestor [
		 label = "{BindingRequestor|- NO_ANNOTATIONS : String\l- NO_UNIT : ICompilationUnit\l- counter : int\l- projectName : String\l- _result : ITypeBinding\l|# ReadAnnotationTests2(String) : \l# suite() : Test\l# getProjectName() : String\l# getUniqueProjectName() : String\l# getSourcePath() : IPath\l# getBinaryPath() : IPath\l# getOutputPath() : IPath\l# addAllSources() : \l# setupTest() : IProject\l# testSourceAnnotation() : \l# testBinaryAnnotation() : \l# getTypeBinding(String, IJavaProject) : ITypeBinding\l# acceptBinding(String, IBinding) : \l# _testAnnotations() : \l# assertAnnotation(String, IAnnotationBinding) : \l}"
	 ]

	 RegressionTests [
		 label = "{RegressionTests||# RegressionTests(String) : \l# suite() : Test\l# setUp() : \l# testBugzilla104032() : \l# testBugzilla106541() : \l# testBugzilla120255() : \l# testBugzilla206591A() : \l# testBugzilla206591B() : \l# testBugzilla423254() : \l}"
	 ]

	 ScalingTests [
		 label = "{ScalingTests|- VERBOSE : boolean\l|# ScalingTests(String) : \l# suite() : Test\l# setUp() : \l# testGeneratingLotsOfFiles() : \l}"
	 ]

	 ScannerTests [
		 label = "{ScannerTests|- P : String\l|# ScannerTests(String) : \l# suite() : Test\l# testHasAnnotation() : \l# testHasNoAnnotation() : \l# testHasAnnotationInComment() : \l# _testHasAnnotationDeclaration() : \l}"
	 ]

	 StarProcessorTests [
		 label = "{StarProcessorTests||# StarProcessorTests(String) : \l# suite() : Test\l# setUp() : \l# getProjectName_ProjectRootAsSrcDir() : String\l# getSourcePath(String) : IPath\l# testGeneratedFileInBuilder() : \l# testGeneratedFileInBuilder_ProjectRootAsSourceDir() : \l# testGeneratedFileInBuilder1() : \l# _testGeneratedFileInBuilder0(String) : \l# _testGeneratedFileInBuilder1(String) : \l# testGeneratingIllegalTypeName() : \l# testTwoAnnotations() : \l# testNestedGeneratedFileInBuilder() : \l# testExtraDependencies() : \l# testCaching() : \l# testDeletedParentFile() : \l# testStopGeneratingFileInBuilder_FullBuild() : \l# testStopGeneratingFileInBuilder_IncrementalBuild() : \l# internalTestStopGeneratingFileInBuilder(boolean) : \l# testAPTRounding() : \l# testConfigMarker() : \l# testDeletedGeneratedSourceFolder() : \l}"
	 ]

	 TestAll [
		 label = "{TestAll||# TestAll(String) : \l# suite() : Test\l}"
	 ]

	 PackageFileFilter [
		 label = "{PackageFileFilter|- BIN_EXT : String\l- BIN_ANNOTATIONS : String\l- ANNO_JAR : File\l- _packageParts : String\l- _binDir : Path\l+ ANNOTATIONS_PKG : String\l+ EXTANNOTATIONS_PKG : String\l|# createAndAddAnnotationJar(IJavaProject) : File\l# createAndAddExternalAnnotationJar(IJavaProject) : File\l# deleteFile(IPath) : IStatus\l# enableAutoBuild(boolean) : boolean\l# getProjectPath(IJavaProject) : IPath\l# getAnnotationsClassesDir() : String\l# getPluginExtClassesDir() : String\l# getPluginExtSrcDir() : String\l# getFileInPlugin(Plugin, IPath) : java\l# moveFile(File, String) : \l# zip(String, Map) : \l# zip(ZipOutputStream, File, int, FileFilter) : \l# getBytesFromFile(File) : byte\l# unzip(File, File) : \l# unzip(ZipInputStream, File) : \l# addLibraryEntry(IJavaProject, IPath, IPath, IPath, boolean) : \l# null() : \l# PackageFileFilter(String, String) : \l# accept(File) : boolean\l}"
	 ]

	 TypeVisitorImpl [
		 label = "{TypeVisitorImpl|# called : boolean\l# testCaseIdentifier : Cases\l# typesVisited : ArrayList\l# code : String\l|# TypeVisitorTests(String) : \l# suite() : Test\l# testPrimitiveTypeVisitor() : \l# testVoidTypeVisitor() : \l# testClassTypeVisitor() : \l# testEnumTypeVisitor() : \l# testInterfaceTypeVisitor() : \l# testAnnotationTypeVisitor() : \l# testArrayTypeVisitor() : \l# testTypeVariableVisitor() : \l# testWildcardTypeVisitor() : \l# runProcessorBasedTest() : \l# null() : \l# _process() : \l# null() : \l# visitTypeMirror(TypeMirror) : \l# visitPrimitiveType(PrimitiveType) : \l# visitVoidType(VoidType) : \l# visitReferenceType(ReferenceType) : \l# visitDeclaredType(DeclaredType) : \l# visitClassType(ClassType) : \l# visitEnumType(EnumType) : \l# visitInterfaceType(InterfaceType) : \l# visitAnnotationType(AnnotationType) : \l# visitArrayType(ArrayType) : \l# visitTypeVariable(TypeVariable) : \l# visitWildcardType(WildcardType) : \l# null() : \l# typeVisited(TypeMirror) : \l# initTypeVisitList() : \l}"
	 ]

	 JEP120 [
		 label = "{JEP120||}"
	 ]

	 JEP120_1 [
		 label = "{JEP120_1||}"
	 ]

	 JEP120_2 [
		 label = "{JEP120_2||}"
	 ]

	 JEP120_3 [
		 label = "{JEP120_3||}"
	 ]

	 JEP120_4 [
		 label = "{JEP120_4||}"
	 ]

	 JEP120_5 [
		 label = "{JEP120_5|# field : String\l|}"
	 ]

	 JEP120_6 [
		 label = "{JEP120_6||}"
	 ]

	 SubClass [
		 label = "{SubClass||}"
	 ]

	 SubClass2 [
		 label = "{SubClass2||}"
	 ]

	 JEP120_7 [
		 label = "{JEP120_7||}"
	 ]

	 SubClass3 [
		 label = "{SubClass3||}"
	 ]

	 AllTests [
		 label = "{AllTests||# suite() : Test\l}"
	 ]

	 DiagnosticReport [
		 label = "{DiagnosticReport|+ count : int\l+ buffer : StringBuffer\l- warnings : List\l|# null() : \l# DiagnosticReport() : \l# report(Diagnostic) : \l# getErrorAt(int) : Diagnostic\l# toString() : String\l# clear() : \l+ setUp() : \l# testBug443769() : \l# testBug456986() : \l# testBug415274() : \l# testBug463062() : \l# testBug340635() : \l# testBug471995() : \l}"
	 ]

	 BatchDispatchTests [
		 label = "{BatchDispatchTests|- INHERITEDANNOPROC : String\l- ONE_ARG_OPTIONS : String\l- ZERO_ARG_OPTIONS : String\l|# suite() : TestSuite\l# BatchDispatchTests(String) : \l+ setUp() : \l# testCheckOptions() : \l# testProcessorArgumentsWithSystemCompiler() : \l# testProcessorArgumentsWithEclipseCompiler() : \l# testCompilerOneClassWithSystemCompiler() : \l# testCompilerOneClassWithEclipseCompiler() : \l# testInheritedAnnosWithSystemCompiler() : \l# testInheritedAnnosWithEclipseCompiler() : \l# testTwoAnnotations() : \l# internalTestGenerateClass(JavaCompiler) : \l# internalTestProcessorArguments(JavaCompiler) : \l# internalTestInheritance(JavaCompiler, String) : \l# test209961() : \l+ tearDown() : \l}"
	 ]

	 BatchTestUtils [
		 label = "{BatchTestUtils|- RESOURCES_DIR : String\l- PROCESSOR_JAR_NAME : String\l- JLS8_PROCESSOR_JAR_NAME : String\l- _processorJarPath : String\l- _jls8ProcessorJarPath : String\l- _tmpFolder : String\l- _eclipseCompiler : JavaCompiler\l- _tmpSrcFolderName : String\l- _tmpSrcDir : File\l- _tmpBinFolderName : String\l- _tmpBinDir : File\l- _tmpGenFolderName : String\l- _tmpGenDir : File\l|# compileOneClass(JavaCompiler, List, File) : \l# compileOneClass(JavaCompiler, List, File, boolean) : \l# compileTree(JavaCompiler, List, File) : \l# compileTree(JavaCompiler, List, File, DiagnosticListener) : \l# compileTree(JavaCompiler, List, File, boolean) : \l# compileTree(JavaCompiler, List, File, boolean, DiagnosticListener) : \l# compileTreeWithErrors(JavaCompiler, List, File, DiagnosticListener) : boolean\l# compileTreeWithErrors(JavaCompiler, List, File, DiagnosticListener, boolean) : boolean\l# compileTreeWithErrors(JavaCompiler, List, File, DiagnosticListener, boolean, boolean) : boolean\l# findFilesUnder(File, List) : \l# getBinFolderName() : String\l# getEclipseCompiler() : JavaCompiler\l# getGenFolderName() : String\l# getSrcFolderName() : String\l# getResourceFolderName() : String\l# init() : \l# addProcessorPaths(List, boolean, boolean) : \l# tearDown() : \l# getPluginDirectoryPath() : String\l# read(java) : byte\l# shouldConvertToIndependentLineDelimiter(File) : boolean\l# copyResource(File, File) : \l# copyResource(String, File) : File\l# copyResources(String, File) : \l# copyResources(File, File) : \l# setupProcessorJar(String, String) : String\l# deleteTree(File) : \l# fileContentsEqualText(File, String) : boolean\l}"
	 ]

	 FileManagerTests [
		 label = "{FileManagerTests||# setUp() : \l# testFileManager() : \l# testInferBinaryName() : \l# testBug460085() : \l# testBug466878_getResource_defaultPackage() : \l}"
	 ]

	 FilerTests [
		 label = "{FilerTests|- TYPEUTILSPROC : String\l|# testElementWithSystemCompiler() : \l# testElementWithEclipseCompiler() : \l# internalTestCreateResource(JavaCompiler, boolean) : \l# setUp() : \l# tearDown() : \l}"
	 ]

	 Java8ElementsTests [
		 label = "{Java8ElementsTests|- JAVA8_ANNOTATION_PROC : String\l|# suite() : Test\l+ setUp() : \l# testSE8Specifics() : \l# _testSE8SpecificsWithJavac() : \l# testLambdaSpecifics() : \l# testLambdaSpecificsWithJavac() : \l# testTypeAnnotations() : \l# _testTypeAnnotationsWithJavac() : \l# testTypeAnnotations1() : \l# testTypeAnnotations1WithJavac() : \l# testTypeAnnotations2() : \l# _testTypeAnnotations2WithJavac() : \l# testTypeAnnotations3() : \l# _testTypeAnnotations3WithJavac() : \l# testTypeAnnotations4() : \l# _testTypeAnnotations4WithJavac() : \l# testTypeAnnotations5() : \l# _testTypeAnnotations5WithJavac() : \l# testTypeAnnotations6() : \l# _testTypeAnnotations6WithJavac() : \l# testTypeAnnotations7() : \l# _testTypeAnnotations7WithJavac() : \l# testTypeAnnotations8() : \l# _testTypeAnnotations8WithJavac() : \l# testTypeAnnotations9() : \l# _testTypeAnnotations9WithJavac() : \l# testTypeAnnotations10() : \l# testTypeAnnotations10WithJavac() : \l# testTypeAnnotations11() : \l# _testTypeAnnotations11WithJavac() : \l# testTypeAnnotations12() : \l# testTypeAnnotations12WithJavac() : \l# testTypeAnnotations13() : \l# testTypeAnnotations13WithJavac() : \l# testTypeAnnotations14() : \l# _testTypeAnnotations14WithJavac() : \l# testTypeAnnotations15() : \l# testTypeAnnotations15WithJavac() : \l# testTypeAnnotations16() : \l# testTypeAnnotations16WithJavac() : \l# testRepeatedAnnotations17() : \l# testRepeatedAnnotations17WithJavac() : \l# testRepeatedAnnotations18() : \l# testRepeatedAnnotations18WithJavac() : \l# testRepeatedAnnotations19() : \l# testRepeatedAnnotations19WithJavac() : \l# testRepeatedAnnotations20() : \l# testRepeatedAnnotations20WithJavac() : \l# testRepeatedAnnotations21() : \l# testRepeatedAnnotations21WithJavac() : \l# testRepeatedAnnotations22() : \l# _testRepeatedAnnotations22WithJavac() : \l# testTypeAnnotations23() : \l# testTypeAnnotations23WithJavac() : \l# testRepeatedAnnotations24() : \l# testRepeatedAnnotations24WithJavac() : \l# testRepeatedAnnotations25() : \l# testRepeatedAnnotations25WithJavac() : \l# testTypeAnnotations26() : \l# testTypeAnnotations26WithJavac() : \l# _testTypeAnnotations27() : \l# _testTypeAnnotations27WithJavac() : \l# testPackageAnnotations() : \l# testPackageAnnotationsWithJavac() : \l# internalTest(JavaCompiler, String, String) : \l# internalTest(JavaCompiler, String, String, String) : \l# internalTest(JavaCompiler, String, String, String, String) : \l# canRunJava8() : boolean\l+ tearDown() : \l}"
	 ]

	 Java8FilerTests [
		 label = "{Java8FilerTests|- FILER_PROC : String\l|# testFilerWithSystemCompiler() : \l# testFilerWithEclipseCompiler() : \l# internalTest(JavaCompiler, boolean) : \l# canRunJava8() : boolean\l# setUp() : \l# tearDown() : \l}"
	 ]

	 DiagnosticReport [
		 label = "{DiagnosticReport|+ count : int\l+ buffer : StringBuffer\l- errors : List\l- MESSAGERPROCNAME : String\l|# null() : \l# DiagnosticReport() : \l# report(Diagnostic) : \l# getErrorAt(int) : Diagnostic\l# toString() : String\l+ setUp() : \l# testMessagerWithSystemCompiler() : \l# testMessagerWithEclipseCompiler() : \l# internalTestMessager(JavaCompiler, DiagnosticListener) : \l+ tearDown() : \l}"
	 ]

	 ModelTests [
		 label = "{ModelTests|- ANNOTATIONMIRRORPROC : String\l- ELEMENTPROC : String\l- GENERICSPROC : String\l- TYPEMIRRORPROC : String\l- VISITORPROC : String\l|+ setUp() : \l# testAnnotationMirrorWithEclipseCompiler() : \l# testElementWithSystemCompiler() : \l# testElementWithEclipseCompiler() : \l# testTypeMirrorWithSystemCompiler() : \l# testTypeMirrorWithEclipseCompiler() : \l# testGenericsWithSystemCompiler() : \l# testGenericsWithEclipseCompiler() : \l# testVisitorsWithSystemCompiler() : \l# testVisitorsWithEclipseCompiler() : \l# testReportedProblemsWithDiagnosticListener() : \l# internalTest(JavaCompiler, String) : \l+ internalTest(JavaCompiler, String, String) : \l+ report(Diagnostic) : \l+ tearDown() : \l}"
	 ]

	 ModelUtilTests [
		 label = "{ModelUtilTests|- ELEMENTUTILSPROC : String\l- TYPEUTILSPROC : String\l|+ setUp() : \l# testElementsWithSystemCompiler() : \l# testElementsWithEclipseCompiler() : \l# testTypesWithSystemCompiler() : \l# testTypesWithEclipseCompiler() : \l# internalTest(JavaCompiler, String) : \l# canRunJava8() : boolean\l+ tearDown() : \l}"
	 ]

	 TestDiagnosticListener [
		 label = "{TestDiagnosticListener|+ NONE : int\l+ ERROR : int\l+ INFO : int\l+ WARNING : int\l+ errorCounter : int\l- writer : PrintWriter\l- NEGATIVEMODELPROCNAME : String\l- INHERITED_PROCNAME : String\l- IGNOREJAVACBUGS : String\l|# null() : \l# TestDiagnosticListener(PrintWriter) : \l+ report(Diagnostic) : \l+ setUp() : \l# testNegativeModelWithSystemCompiler() : \l# testNegativeModel1WithEclipseCompiler() : \l# testNegativeModel2WithEclipseCompiler() : \l# testNegativeModel3WithEclipseCompiler() : \l# testNegativeModel4WithEclipseCompiler() : \l# testNegativeModel5WithEclipseCompiler() : \l# testNegativeModel6WithEclipseCompiler() : \l# testNegativeModel7WithEclipseCompiler() : \l# testNegativeModel8WithEclipseCompiler() : \l# testNegativeModel9WithEclipseCompiler() : \l# testNegativeModel10WithEclipseCompiler() : \l# testNegativeModel10WithSystemCompiler() : \l# internalTestNegativeModel(JavaCompiler, int, Collection) : \l+ tearDown() : \l}"
	 ]

	 TestUtils [
		 label = "{TestUtils||# concatPath(String) : File\l# convertToIndependentLineDelimiter(String) : String\l}"
	 ]

	 CompilerInvocationDiagnosticListener [
		 label = "{CompilerInvocationDiagnosticListener|# standardJavaFileManager : StandardJavaFileManager\l# options : List\l# fileNames : String\l+ NONE : int\l+ ERROR : int\l+ INFO : int\l+ WARNING : int\l- err : PrintWriter\l+ kind : int\l# COMPILER : EclipseCompiler\l# JAVAC_COMPILER : JavaCompiler\l|# AbstractCompilerToolTest(String) : \l# null() : \l# CompilerInvocationTestsArguments(StandardJavaFileManager, List, String) : \l+ toString() : String\l# null() : \l# CompilerInvocationDiagnosticListener(PrintWriter) : \l+ report(Diagnostic) : \l+ invokeCompiler(PrintWriter, PrintWriter, Object, TestCompilationProgress) : boolean\l}"
	 ]

	 AllTests [
		 label = "{AllTests||# suite() : Test\l}"
	 ]

	 SubstringDetector [
		 label = "{SubstringDetector|- match : Location\l- matchFound : boolean\l# matchFound : boolean\l# discriminatingSuffix : String\l# detector : JavaFileObject\l- discriminatingKind : Kind\l- match : Location\l- matchFound : boolean\l- match : String\l- matchFound : boolean\l|# null() : \l# CompilerInvocationTests(String) : \l# suite() : Test\l# testClass() : Class\l# checkClassFiles(String) : \l# runTest(boolean, String, StandardJavaFileManager, List, String, String, String, boolean, String) : \l# null() : \l# GetLocationDetector(StandardJavaFileManager, Location) : \l+ getLocation(Location) : Iterable\l# matchFound() : boolean\l# null() : \l# GetJavaFileDetector(StandardJavaFileManager) : \l# GetJavaFileDetector(StandardJavaFileManager, String, JavaFileObject) : \l+ getJavaFileObjects(File) : Iterable\l+ getJavaFileObjects(String) : Iterable\l+ getJavaFileObjectsFromFiles(Iterable) : Iterable\l+ getJavaFileObjectsFromStrings(Iterable) : Iterable\l+ list(Location, String, Set, boolean) : Iterable\l# null() : \l# GetJavaFileForInputDetector(StandardJavaFileManager) : \l# GetJavaFileForInputDetector(StandardJavaFileManager, String, Kind) : \l# null() : \l# JavaFileInputDetector(JavaFileObject) : \l+ getCharContent(boolean) : CharSequence\l+ openInputStream() : InputStream\l+ openReader(boolean) : Reader\l# detector(JavaFileObject) : JavaFileObject\l+ getFileForInput(Location, String, String) : FileObject\l+ getJavaFileForInput(Location, String, Kind) : JavaFileObject\l# null() : \l# GetJavaFileForOutputDetector(StandardJavaFileManager) : \l# GetJavaFileForOutputDetector(StandardJavaFileManager, String) : \l# null() : \l# JavaFileOutputDetector(JavaFileObject) : \l+ openOutputStream() : OutputStream\l+ openWriter() : Writer\l# detector(JavaFileObject) : JavaFileObject\l+ getFileForOutput(Location, String, String, FileObject) : FileObject\l+ getJavaFileForOutput(Location, String, Kind, FileObject) : JavaFileObject\l# null() : \l# SetLocationDetector(StandardJavaFileManager, Location) : \l+ setLocation(Location, Iterable) : \l# matchFound() : boolean\l# null() : \l# SubstringDetector(String) : \l+ log(LogRecord) : \l# matchFound() : boolean\l# compareFileLocations(String, Iterator) : \l# test001_basic() : \l# test002_dash_d_option() : \l# test003_dash_d_option() : \l# test004_no_dash_d_option() : \l# test005_dash_d_option_custom_file_manager() : \l# test006_no_dash_d_option_custom_file_manager() : \l# test007_options_consumption() : \l# test008_options_consumption() : \l# test009_options_consumption() : \l# test010_inappropriate_encoding_diagnosis() : \l# test011_inappropriate_encoding_diagnosis() : \l# test012_files_access_read() : \l# _test013_files_access_read() : \l# _test014_files_access_read() : \l# test015_files_access_write() : \l# test016_files_access_write() : \l# test017_sourcepath_without_destination() : \l# _test018_sourcepath_with_destination() : \l# test019_sourcepath_without_destination() : \l# _test020_sourcepath_with_destination() : \l# test021_output_streams() : \l# test022_output_streams() : \l# _test023_output_streams() : \l}"
	 ]

	 CompilerToolTests [
		 label = "{CompilerToolTests|- DEBUG : boolean\l- compiler : JavaCompiler\l# ONE_ARG_OPTIONS : String\l# ZERO_ARG_OPTIONS : String\l# FAKE_ZERO_ARG_OPTIONS : String\l|# CompilerToolTests(String) : \l# displayLocation(StandardJavaFileManager, StandardLocation) : \l+ setUp() : \l+ tearDown() : \l# testCheckOptions() : \l# testCompilerOneClassWithSystemCompiler() : \l+ getFileForInput(Location, String, String) : FileObject\l+ getJavaFileForInput(Location, String, Kind) : JavaFileObject\l+ getJavaFileForOutput(Location, String, Kind, FileObject) : JavaFileObject\l# testCompilerOneClassWithSystemCompiler2() : \l+ getFileForInput(Location, String, String) : FileObject\l+ getJavaFileForInput(Location, String, Kind) : JavaFileObject\l+ getJavaFileForOutput(Location, String, Kind, FileObject) : JavaFileObject\l+ inferBinaryName(Location, JavaFileObject) : String\l+ list(Location, String, Set, boolean) : Iterable\l# testCompilerOneClassWithEclipseCompiler() : \l+ getFileForInput(Location, String, String) : FileObject\l+ getJavaFileForInput(Location, String, Kind) : JavaFileObject\l+ getJavaFileForOutput(Location, String, Kind, FileObject) : JavaFileObject\l# testCompilerOneClassWithEclipseCompiler2() : \l+ getJavaFileForOutput(Location, String, Kind, FileObject) : JavaFileObject\l# testCompilerOneClassWithEclipseCompiler3() : \l+ getJavaFileForOutput(Location, String, Kind, FileObject) : JavaFileObject\l# testCompilerOneClassWithEclipseCompiler4() : \l# testCompilerOneClassWithEclipseCompiler5() : \l# testCompilerOneClassWithEclipseCompiler6() : \l+ report(Diagnostic) : \l# testCompilerOneClassWithEclipseCompiler7() : \l+ report(Diagnostic) : \l# testInferBinaryName() : \l# testFileManager() : \l# testFileManager2() : \l# testCleanUp() : \l}"
	 ]

	 ForwardingStandardJavaFileManager [
		 label = "{ForwardingStandardJavaFileManager||# ForwardingStandardJavaFileManager(T) : \l+ getJavaFileObjects(File) : Iterable\l+ getJavaFileObjects(String) : Iterable\l+ getJavaFileObjectsFro