digraph ClassDiagram {
	 fontname = "Bitstream Vera Sans"
	 fontsize = 8

	 node [
		 fontname = "Bistream Vera Sans"
		 fontsize = 8
		 shape = "record"
	 ]

	 edge [
		 fontname = "Bistream Vera Sans"
		 fontsize = 8
	 ]

	 DOMException [
		 label = "{DOMException|- serialVersionUID : long\l|# DOMException() : \l# DOMException(String) : \l}"
	 ]

	 DOMFactory [
		 label = "{DOMFactory|# lineSeparator : String\l|# DOMFactory() : \l# createCompilationUnit() : IDOMCompilationUnit\l# createCompilationUnit(char, String) : IDOMCompilationUnit\l# createCompilationUnit(String, String) : IDOMCompilationUnit\l# createField() : IDOMField\l# createField(String) : IDOMField\l# createImport() : IDOMImport\l# createImport(String) : IDOMImport\l# createInitializer() : IDOMInitializer\l# createInitializer(String) : IDOMInitializer\l# createMethod() : IDOMMethod\l# createMethod(String) : IDOMMethod\l# createPackage() : IDOMPackage\l# createPackage(String) : IDOMPackage\l# createType() : IDOMType\l# createClass() : IDOMType\l# createInterface() : IDOMType\l# createType(String) : IDOMType\l}"
	 ]

	 IDOMCompilationUnit [
		 label = "{IDOMCompilationUnit||# getHeader() : String\l# getName() : String\l# setHeader(String) : \l# setName(String) : \l}"
	 ]

	 IDOMFactory [
		 label = "{IDOMFactory||# createCompilationUnit() : IDOMCompilationUnit\l# createCompilationUnit(char, String) : IDOMCompilationUnit\l# createCompilationUnit(String, String) : IDOMCompilationUnit\l# createField() : IDOMField\l# createField(String) : IDOMField\l# createImport() : IDOMImport\l# createImport(String) : IDOMImport\l# createInitializer() : IDOMInitializer\l# createInitializer(String) : IDOMInitializer\l# createMethod() : IDOMMethod\l# createMethod(String) : IDOMMethod\l# createPackage() : IDOMPackage\l# createPackage(String) : IDOMPackage\l# createType() : IDOMType\l# createClass() : IDOMType\l# createInterface() : IDOMType\l# createType(String) : IDOMType\l}"
	 ]

	 IDOMField [
		 label = "{IDOMField||# getInitializer() : String\l# getName() : String\l# getType() : String\l# setInitializer(String) : \l# setName(String) : \l# setType(String) : \l}"
	 ]

	 IDOMImport [
		 label = "{IDOMImport||# getName() : String\l# isOnDemand() : boolean\l# getFlags() : int\l# setFlags(int) : \l# setName(String) : \l}"
	 ]

	 IDOMInitializer [
		 label = "{IDOMInitializer||# getBody() : String\l# getName() : String\l# setBody(String) : \l# setName(String) : \l}"
	 ]

	 IDOMMember [
		 label = "{IDOMMember||# getComment() : String\l# getFlags() : int\l# setComment(String) : \l# setFlags(int) : \l}"
	 ]

	 IDOMMethod [
		 label = "{IDOMMethod||# addException(String) : \l# addParameter(String, String) : \l# getBody() : String\l# setDefault(String) : \l# getDefault() : String\l# getExceptions() : String\l# getTypeParameters() : String\l# getName() : String\l# getParameterNames() : String\l# getParameterTypes() : String\l# getReturnType() : String\l# isConstructor() : boolean\l# setBody(String) : \l# setConstructor(boolean) : \l# setExceptions(String) : \l# setTypeParameters(String) : \l# setName(String) : \l# setParameters(String, String) : \l# setReturnType(String) : \l}"
	 ]

	 IDOMNode [
		 label = "{IDOMNode||# COMPILATION_UNIT() : int\l# PACKAGE() : int\l# IMPORT() : int\l# TYPE() : int\l# FIELD() : int\l# METHOD() : int\l# INITIALIZER() : int\l# addChild(IDOMNode) : \l# canHaveChildren() : boolean\l# clone() : Object\l# getCharacters() : char\l# getChild(String) : IDOMNode\l# getChildren() : Enumeration\l# getContents() : String\l# getFirstChild() : IDOMNode\l# getJavaElement(IJavaElement) : IJavaElement\l# getName() : String\l# getNextNode() : IDOMNode\l# getNodeType() : int\l# getParent() : IDOMNode\l# getPreviousNode() : IDOMNode\l# insertSibling(IDOMNode) : \l# isAllowableChild(IDOMNode) : boolean\l# isSignatureEqual(IDOMNode) : boolean\l# remove() : \l# setName(String) : \l}"
	 ]

	 IDOMPackage [
		 label = "{IDOMPackage||# getName() : String\l# setName(String) : \l}"
	 ]

	 IDOMType [
		 label = "{IDOMType||# addSuperInterface(String) : \l# getTypeParameters() : String\l# getName() : String\l# getSuperclass() : String\l# getSuperInterfaces() : String\l# isClass() : boolean\l# isEnum() : boolean\l# isAnnotation() : boolean\l# setClass(boolean) : \l# setEnum(boolean) : \l# setAnnotation(boolean) : \l# setTypeParameters(String) : \l# setName(String) : \l# setSuperclass(String) : \l# setSuperInterfaces(String) : \l}"
	 ]

	 AbstractDOMBuilder [
		 label = "{AbstractDOMBuilder|# fAbort : boolean\l# fBuildingCU : boolean\l# fBuildingType : boolean\l# fDocument : char\l# fLineStartPositions : int\l# fStack : Stack\l# fFieldCount : int\l# fNode : DOMNode\l|# AbstractDOMBuilder() : \l# acceptLineSeparatorPositions(int) : \l# addChild(IDOMNode) : \l# createCompilationUnit(char, char) : IDOMCompilationUnit\l# createCompilationUnit(ICompilationUnit) : IDOMCompilationUnit\l# enterCompilationUnit() : \l# exitCompilationUnit(int) : \l# exitType(int, int) : \l# getLineStart(int) : int\l# initializeBuild(char, boolean, boolean) : \l}"
	 ]

	 CompilationUnit [
		 label = "{CompilationUnit|# fContents : char\l# fFileName : char\l# fMainTypeName : char\l|# CompilationUnit(char, char) : \l# getContents() : char\l# getFileName() : char\l# getMainTypeName() : char\l# getPackageName() : char\l# ignoreOptionalProblems() : boolean\l# toString() : String\l}"
	 ]

	 DOMBuilder [
		 label = "{DOMBuilder|# fBuildingSingleMember : boolean\l# fFinishedSingleMember : boolean\l# fFields : ArrayList\l# options : Map\l|# DOMBuilder() : \l# acceptImport(int, int, int, char, int, boolean, int) : \l# acceptInitializer(int, int, int, int, int, int, int) : \l# acceptPackage(int, int, int, char, int) : \l# acceptProblem(CategorizedProblem) : \l# addChild(IDOMNode) : \l# createCompilationUnit() : IDOMCompilationUnit\l# createCompilationUnit(ICompilationUnit) : IDOMCompilationUnit\l# createField(char) : IDOMField\l# createFields(char) : IDOMField\l# createImport() : IDOMImport\l# createImport(char) : IDOMImport\l# createInitializer(char) : IDOMInitializer\l# createMethod(char) : IDOMMethod\l# createPackage() : IDOMPackage\l# createPackage(char) : IDOMPackage\l# createType(char) : IDOMType\l# enterAbstractMethod(int, int, int, int, char, int, int, int, char, int, int, char, int, int, char, int, int, int, int, int, char, int, int, int, boolean) : \l# enterClass(int, int, int, int, int, char, int, int, char, int, int, char, int, int, int) : \l# enterConstructor(int, int, int, int, char, int, int, char, int, int, char, int, int, int, char, int, int, int) : \l# enterField(int, int, int, int, char, int, int, int, char, int, int, int, int) : \l# enterInterface(int, int, int, int, int, char, int, int, char, int, int, int) : \l# enterMethod(int, int, int, int, char, int, int, int, char, int, int, char, int, int, char, int, int, int, int, int, char, int, int, int) : \l# enterType(int, int, int, int, int, char, int, int, char, int, int, char, int, int, int, boolean) : \l# exitAbstractMethod(int, int) : \l# exitClass(int, int) : \l# exitConstructor(int, int) : \l# exitField(int, int) : \l# exitInterface(int, int) : \l# exitMethod(int, int) : \l# getParser(Map) : DocumentElementParser\l# initializeBuild(char, boolean, boolean, boolean) : \l}"
	 ]

	 DOMCompilationUnit [
		 label = "{DOMCompilationUnit|# fHeader : String\l|# DOMCompilationUnit() : \l# DOMCompilationUnit(char, int) : \l# appendFragmentedContents(CharArrayBuffer) : \l# canHaveChildren() : boolean\l# getHeader() : String\l# getJavaElement(IJavaElement) : IJavaElement\l# getName() : String\l# getNodeType() : int\l# initalizeHeader() : \l# isAllowableChild(IDOMNode) : boolean\l# newDOMNode() : DOMNode\l# normalize(ILineStartFinder) : \l# setHeader(String) : \l# setName(String) : \l# shareContents(DOMNode) : \l# toString() : String\l}"
	 ]

	 DOMField [
		 label = "{DOMField|# fType : String\l# fTypeRange : int\l# fInitializer : String\l# fInitializerRange : int\l|# DOMField() : \l# DOMField(char, int, String, int, int, int, int, int, String, boolean, int, boolean) : \l# DOMField(char, int, String, int, int, String, boolean) : \l# appendMemberBodyContents(CharArrayBuffer) : \l# appendMemberDeclarationContents(CharArrayBuffer) : \l# appendMemberHeaderFragment(CharArrayBuffer) : \l# appendSimpleContents(CharArrayBuffer) : \l# becomeDetailed() : \l# clone() : Object\l# expand() : \l# getDetailedNode() : DOMNode\l# getFirstFieldDeclaration() : DOMField\l# getInitializer() : String\l# getJavaElement(IJavaElement) : IJavaElement\l# getLastFieldDeclaration() : DOMField\l# getMemberDeclarationStartPosition() : int\l# getNodeType() : int\l# getSingleVariableDeclaratorContents() : char\l# getType() : String\l# getTypeContents() : char\l# hasInitializer() : boolean\l# hasMultipleVariableDeclarators() : boolean\l# insertSibling(IDOMNode) : \l# isTypeAltered() : boolean\l# isVariableDeclarator() : boolean\l# newDOMNode() : DOMNode\l# normalizeEndPosition(ILineStartFinder, DOMNode) : \l# normalizeStartPosition(int, ILineStartFinder) : \l# offset(int) : \l# remove() : \l# setComment(String) : \l# setFlags(int) : \l# setHasInitializer(boolean) : \l# setInitializer(String) : \l# setInitializerRange(int, int) : \l# setIsVariableDeclarator(boolean) : \l# setName(String) : \l# setType(String) : \l# setTypeAltered(boolean) : \l# shareContents(DOMNode) : \l# toString() : String\l}"
	 ]

	 DOMImport [
		 label = "{DOMImport|# fOnDemand : boolean\l# fFlags : int\l|# DOMImport() : \l# DOMImport(char, int, String, int, boolean, int) : \l# DOMImport(char, int, String, boolean, int) : \l# appendFragmentedContents(CharArrayBuffer) : \l# getContents() : String\l# getDetailedNode() : DOMNode\l# getJavaElement(IJavaElement) : IJavaElement\l# getNodeType() : int\l# isOnDemand() : boolean\l# newDOMNode() : DOMNode\l# setName(String) : \l# toString() : String\l# getFlags() : int\l# setFlags(int) : \l}"
	 ]

	 DOMInitializer [
		 label = "{DOMInitializer|# fBody : String\l# fBodyRange : int\l|# DOMInitializer() : \l# DOMInitializer(char, int, int, int, int, int) : \l# DOMInitializer(char, int, int) : \l# appendMemberBodyContents(CharArrayBuffer) : \l# appendMemberDeclarationContents(CharArrayBuffer) : \l# appendSimpleContents(CharArrayBuffer) : \l# getBody() : String\l# getDetailedNode() : DOMNode\l# getJavaElement(IJavaElement) : IJavaElement\l# getMemberDeclarationStartPosition() : int\l# getNodeType() : int\l# isSignatureEqual(IDOMNode) : boolean\l# newDOMNode() : DOMNode\l# offset(int) : \l# setBody(String) : \l# setName(String) : \l# shareContents(DOMNode) : \l# toString() : String\l}"
	 ]

	 DOMMember [
		 label = "{DOMMember|# fFlags : int\l# fComment : String\l# fCommentRange : int\l# fModifiers : char\l# fModifierRange : int\l# appendMemberBodyContents : null\l# appendMemberDeclarationContents : null\l# appendSimpleContents : null\l# getMemberDeclarationStartPosition : int\l|# DOMMember() : \l# DOMMember(char, int, String, int, int, int, int) : \l# appendFragmentedContents(CharArrayBuffer, CharArrayBuffer, CharArrayBuffer) : \l# appendMemberHeaderFragment(CharArrayBuffer, CharArrayBuffer) : \l# appendString(String, String) : String\l# generateFlags() : char\l# getComment() : String\l# getFlags() : int\l# getModifiersText() : char\l# hasBody() : boolean\l# hasComment() : boolean\l# offset(int) : \l# setComment(String) : \l# setFlags(int) : \l# setHasBody(boolean) : \l# setHasComment(boolean) : \l# setStartPosition(int) : \l# shareContents(DOMNode) : \l}"
	 ]

	 DOMMethod [
		 label = "{DOMMethod|# fReturnType : String\l# fReturnTypeRange : int\l# fParameterList : char\l# fParameterRange : int\l# fExceptionList : char\l# fExceptionRange : int\l# fBody : String\l# fBodyRange : int\l# fParameterNames : String\l# fParameterTypes : String\l# fExceptions : String\l# fTypeParameters : String\l# fDefaultValue : String\l|# DOMMethod() : \l# DOMMethod(char, int, String, int, int, int, int, boolean, String, int, String, String, int, String, int, int) : \l# DOMMethod(char, int, String, int, int, boolean, String, String, String, String) : \l# addException(String) : \l# addParameter(String, String) : \l# appendMemberBodyContents(CharArrayBuffer) : \l# appendMemberDeclarationContents(CharArrayBuffer) : \l# appendSimpleContents(CharArrayBuffer) : \l# getBody() : String\l# getConstructorName() : String\l# getDetailedNode() : DOMNode\l# getExceptions() : String\l# generateFlags() : char\l# getJavaElement(IJavaElement) : IJavaElement\l# getMemberDeclarationStartPosition() : int\l# getName() : String\l# getNodeType() : int\l# getParameterNames() : String\l# getParameterTypes() : String\l# getReturnType() : String\l# getReturnTypeContents() : char\l# hasTrailingArrayQualifier() : boolean\l# isConstructor() : boolean\l# isReturnTypeAltered() : boolean\l# isSignatureEqual(IDOMNode) : boolean\l# newDOMNode() : DOMNode\l# offset(int) : \l# setBody(String) : \l# setBodyRangeEnd(int) : \l# setConstructor(boolean) : \l# setExceptions(String) : \l# setName(String) : \l# setParameters(String, String) : \l# setReturnType(String) : \l# setReturnTypeAltered(boolean) : \l# setSourceRangeEnd(int) : \l# shareContents(DOMNode) : \l# toString() : String\l# setDefault(String) : \l# getDefault() : String\l# getTypeParameters() : String\l# setTypeParameters(String) : \l}"
	 ]

	 DOMNode [
		 label = "{DOMNode|# fFirstChild : DOMNode\l# fLastChild : DOMNode\l# fNextNode : DOMNode\l# fParent : DOMNode\l# fPreviousNode : DOMNode\l# fIsFragmented : boolean\l# fName : String\l# fNameRange : int\l# fDocument : char\l# fSourceRange : int\l# fStateMask : int\l# fInsertionPosition : int\l# MASK_FIELD_HAS_INITIALIZER : int\l# MASK_FIELD_IS_VARIABLE_DECLARATOR : int\l# MASK_FIELD_TYPE_ALTERED : int\l# MASK_NAME_ALTERED : int\l# MASK_HAS_BODY : int\l# MASK_HAS_COMMENT : int\l# MASK_IS_CONSTRUCTOR : int\l# MASK_TYPE_IS_CLASS : int\l# MASK_TYPE_HAS_SUPERCLASS : int\l# MASK_TYPE_HAS_INTERFACES : int\l# MASK_RETURN_TYPE_ALTERED : int\l# MASK_DETAILED_SOURCE_INDEXES : int\l# appendFragmentedContents : null\l# newDOMNode : DOMNode\l+ toString : String\l|# DOMNode() : \l# DOMNode(char, int, String, int) : \l# addChild(IDOMNode) : \l# appendContents(CharArrayBuffer) : \l# appendContentsOfChildren(CharArrayBuffer, CharArrayBuffer) : \l# basicAddChild(IDOMNode) : \l# becomeDetailed() : \l# canHaveChildren() : boolean\l# clone() : Object\l# cloneSharingDocument(char, int) : DOMNode\l# fragment() : \l# getCharacters() : char\l# getChild(String) : IDOMNode\l# getChildren() : Enumeration\l# getContents() : String\l# getDetailedNode() : DOMNode\l# getDocument() : char\l# getEndPosition() : int\l# getFactory() : IDOMFactory\l# getFirstChild() : IDOMNode\l# getInsertionPosition() : int\l# getMask(int) : boolean\l# getName() : String\l# getNameContents() : char\l# getNextNode() : IDOMNode\l# getParent() : IDOMNode\l# getParentEndDeclaration() : int\l# getPreviousNode() : IDOMNode\l# getRoot() : IDOMNode\l# getStartPosition() : int\l# insertSibling(IDOMNode) : \l# isAllowableChild(IDOMNode) : boolean\l# isContentMergableWith(DOMNode) : boolean\l# isDetailed() : boolean\l# isFragmented() : boolean\l# isNameAltered() : boolean\l# isSignatureEqual(IDOMNode) : boolean\l# localizeContents() : \l# normalize(ILineStartFinder) : \l# normalizeEndPosition(ILineStartFinder, DOMNode) : \l# normalizeStartPosition(int, ILineStartFinder) : \l# offset(int) : \l# offsetRange(int, int) : \l# rangeCopy(int) : int\l# remove() : \l# setMask(int, boolean) : \l# setName(String) : \l# setNameAltered(boolean) : \l# setSourceRangeEnd(int) : \l# setStartPosition(int) : \l# shareContents(DOMNode) : \l}"
	 ]

	 DOMPackage [
		 label = "{DOMPackage||# DOMPackage() : \l# DOMPackage(char, int, String) : \l# DOMPackage(char, int, String, int) : \l# appendFragmentedContents(CharArrayBuffer) : \l# getContents() : String\l# getDetailedNode() : DOMNode\l# getJavaElement(IJavaElement) : IJavaElement\l# getNodeType() : int\l# newDOMNode() : DOMNode\l# setName(String) : \l# toString() : String\l}"
	 ]

	 DOMType [
		 label = "{DOMType|# fTypeKeyword : String\l# fTypeRange : int\l# fSuperclass : String\l# fSuperclassRange : int\l# fExtendsRange : int\l# fImplementsRange : int\l# fInterfaces : char\l# fInterfacesRange : int\l# fOpenBodyRange : int\l# fCloseBodyRange : int\l# fSuperInterfaces : String\l# fTypeParameters : String\l# fIsEnum : boolean\l# 