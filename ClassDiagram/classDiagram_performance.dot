digraph ClassDiagram {
	 fontname = "Bitstream Vera Sans"
	 fontsize = 8

	 node [
		 fontname = "Bistream Vera Sans"
		 fontsize = 8
		 shape = "record"
	 ]

	 edge [
		 fontname = "Bistream Vera Sans"
		 fontsize = 8
	 ]

	 AllPerformanceTests [
		 label = "{AllPerformanceTests|# ADD : boolean\l# RUN_ID : String\l# MAX_MEM : long\l# TOTAL_MEM : long\l|# getAllTestClasses() : Class\l# getAdditionalTestClasses() : Class\l# suite() : Test\l}"
	 ]

	 CommentMapperASTVisitor [
		 label = "{CommentMapperASTVisitor|# JLS3_INTERNAL : int\l- TESTS_COUNT : int\l- ITERATIONS_COUNT : int\l# nodesCount : int\l- LOG_STREAMS : PrintStream\l# compilationUnit : CompilationUnit\l# nodes : int\l# extendedStartPositions : int\l# extendedEndPositions : int\l|# FullSourceWorkspaceASTTests(String) : \l# null() : \l# suite() : Test\l# testClass() : Class\l# setUp() : \l# tearDown() : \l# null() : \l# CommentMapperASTVisitor(CompilationUnit) : \l# visitNode(ASTNode) : boolean\l# endVisitNode(ASTNode) : \l# visit(AnonymousClassDeclaration) : boolean\l# visit(ArrayAccess) : boolean\l# visit(ArrayCreation) : boolean\l# visit(ArrayInitializer) : boolean\l# visit(ArrayType) : boolean\l# visit(AssertStatement) : boolean\l# visit(Assignment) : boolean\l# visit(Block) : boolean\l# visit(BooleanLiteral) : boolean\l# visit(BreakStatement) : boolean\l# visit(CastExpression) : boolean\l# visit(CatchClause) : boolean\l# visit(CharacterLiteral) : boolean\l# visit(ClassInstanceCreation) : boolean\l# visit(CompilationUnit) : boolean\l# visit(ConditionalExpression) : boolean\l# visit(ConstructorInvocation) : boolean\l# visit(ContinueStatement) : boolean\l# visit(DoStatement) : boolean\l# visit(EmptyStatement) : boolean\l# visit(ExpressionStatement) : boolean\l# visit(FieldAccess) : boolean\l# visit(FieldDeclaration) : boolean\l# visit(ForStatement) : boolean\l# visit(IfStatement) : boolean\l# visit(ImportDeclaration) : boolean\l# visit(InfixExpression) : boolean\l# visit(InstanceofExpression) : boolean\l# visit(Initializer) : boolean\l# visit(Javadoc) : boolean\l# visit(LabeledStatement) : boolean\l# visit(MethodDeclaration) : boolean\l# visit(MethodInvocation) : boolean\l# visit(NullLiteral) : boolean\l# visit(NumberLiteral) : boolean\l# visit(PackageDeclaration) : boolean\l# visit(ParenthesizedExpression) : boolean\l# visit(PostfixExpression) : boolean\l# visit(PrefixExpression) : boolean\l# visit(PrimitiveType) : boolean\l# visit(QualifiedName) : boolean\l# visit(ReturnStatement) : boolean\l# visit(SimpleName) : boolean\l# visit(SimpleType) : boolean\l# visit(StringLiteral) : boolean\l# visit(SuperConstructorInvocation) : boolean\l# visit(SuperFieldAccess) : boolean\l# visit(SuperMethodInvocation) : boolean\l# visit(SwitchCase) : boolean\l# visit(SwitchStatement) : boolean\l# visit(SynchronizedStatement) : boolean\l# visit(ThisExpression) : boolean\l# visit(ThrowStatement) : boolean\l# visit(TryStatement) : boolean\l# visit(TypeDeclaration) : boolean\l# visit(TypeDeclarationStatement) : boolean\l# visit(TypeLiteral) : boolean\l# visit(SingleVariableDeclaration) : boolean\l# visit(VariableDeclarationExpression) : boolean\l# visit(VariableDeclarationStatement) : boolean\l# visit(VariableDeclarationFragment) : boolean\l# visit(WhileStatement) : boolean\l# visit(BlockComment) : boolean\l# visit(LineComment) : boolean\l# visit(MemberRef) : boolean\l# visit(MethodRef) : boolean\l# visit(MethodRefParameter) : boolean\l# visit(TagElement) : boolean\l# visit(TextElement) : boolean\l# endVisit(AnonymousClassDeclaration) : \l# endVisit(ArrayAccess) : \l# endVisit(ArrayCreation) : \l# endVisit(ArrayInitializer) : \l# endVisit(ArrayType) : \l# endVisit(AssertStatement) : \l# endVisit(Assignment) : \l# endVisit(Block) : \l# endVisit(BooleanLiteral) : \l# endVisit(BreakStatement) : \l# endVisit(CastExpression) : \l# endVisit(CatchClause) : \l# endVisit(CharacterLiteral) : \l# endVisit(ClassInstanceCreation) : \l# endVisit(CompilationUnit) : \l# endVisit(ConditionalExpression) : \l# endVisit(ConstructorInvocation) : \l# endVisit(ContinueStatement) : \l# endVisit(DoStatement) : \l# endVisit(EmptyStatement) : \l# endVisit(ExpressionStatement) : \l# endVisit(FieldAccess) : \l# endVisit(FieldDeclaration) : \l# endVisit(ForStatement) : \l# endVisit(IfStatement) : \l# endVisit(ImportDeclaration) : \l# endVisit(InfixExpression) : \l# endVisit(InstanceofExpression) : \l# endVisit(Initializer) : \l# endVisit(Javadoc) : \l# endVisit(LabeledStatement) : \l# endVisit(MethodDeclaration) : \l# endVisit(MethodInvocation) : \l# endVisit(NullLiteral) : \l# endVisit(NumberLiteral) : \l# endVisit(PackageDeclaration) : \l# endVisit(ParenthesizedExpression) : \l# endVisit(PostfixExpression) : \l# endVisit(PrefixExpression) : \l# endVisit(PrimitiveType) : \l# endVisit(QualifiedName) : \l# endVisit(ReturnStatement) : \l# endVisit(SimpleName) : \l# endVisit(SimpleType) : \l# endVisit(StringLiteral) : \l# endVisit(SuperConstructorInvocation) : \l# endVisit(SuperFieldAccess) : \l# endVisit(SuperMethodInvocation) : \l# endVisit(SwitchCase) : \l# endVisit(SwitchStatement) : \l# endVisit(SynchronizedStatement) : \l# endVisit(ThisExpression) : \l# endVisit(ThrowStatement) : \l# endVisit(TryStatement) : \l# endVisit(TypeDeclaration) : \l# endVisit(TypeDeclarationStatement) : \l# endVisit(TypeLiteral) : \l# endVisit(SingleVariableDeclaration) : \l# endVisit(VariableDeclarationExpression) : \l# endVisit(VariableDeclarationStatement) : \l# endVisit(VariableDeclarationFragment) : \l# endVisit(WhileStatement) : \l# endVisit(BlockComment) : \l# endVisit(LineComment) : \l# endVisit(MemberRef) : \l# endVisit(MethodRef) : \l# endVisit(MethodRefParameter) : \l# endVisit(TagElement) : \l# endVisit(TextElement) : \l# createAST(ICompilationUnit, int) : \l# testPerfDomAstCreationJLS2() : \l# testPerfDomAstCreationJLS3() : \l# runAllProjectsAstCreation(int) : int\l# testWkspDomAstCreationJLS2() : \l# runAstCreation(IJavaProject) : \l# acceptAST(ICompilationUnit, CompilationUnit) : \l# testDomAstCreationProjectJLS3() : \l}"
	 ]

	 FullSourceWorkspaceBuildTests [
		 label = "{FullSourceWorkspaceBuildTests|- TESTS_COUNT : int\l- ITERATIONS_COUNT : int\l- WARMUP_COUNT : int\l- SCAN_REPEAT : int\l- TIME_THRESHOLD : int\l- LOG_STREAMS : PrintStream\l- ALL_OPTIONS : String\l# JDT_CORE_SRC_PATHS : String\l|# FullSourceWorkspaceBuildTests(String) : \l# null() : \l# suite() : Test\l# testClass() : Class\l# build(IJavaProject, Hashtable, boolean) : \l# run(IProgressMonitor) : \l# compile(String, String, boolean, String) : \l# compile(String, String, String, boolean, String) : \l# compile(String, String, String, boolean) : \l# compile(String, String, String, String, boolean, String) : \l# parseFile(String, int, int) : long\l# parseParserFile(int) : \l# run(IProgressMonitor) : \l# scanFile(String, int) : \l# tearDown() : \l# testScanner() : \l# run(IProgressMonitor) : \l# testParser() : \l# _testSourceParser() : \l# testFullBuildDefault() : \l# testFullBuildProjectNoWarning() : \l# testFullBuildProjectDefault() : \l# testFullBuildProjectAllWarnings() : \l# testBatchCompilerNoWarning() : \l# testCompileJDTCoreProjectNoWarning() : \l# testCompileJDTCoreProjectDefault() : \l# testCompileJDTCoreProjectJavadoc() : \l# testCompileJDTCoreProjectAllWarnings() : \l# testCompileSWTProjectDefault() : \l# testBuildGenericType() : \l# testBug434326() : \l}"
	 ]

	 Measuring [
		 label = "{Measuring|- TESTS_COUNT : int\l- ITERATIONS_COUNT : int\l- LOG_STREAMS : PrintStream\l# MAX_MEM : long\l# count : int\l# start : boolean\l|# null() : \l# suite() : Test\l# testClass() : Class\l# verifyVmArguments() : \l# FullSourceWorkspaceCompleteSearchTests(String) : \l# setUp() : \l# tearDown() : \l# null() : \l# acceptSearchMatch(SearchMatch) : \l# null() : \l# Measuring(boolean) : \l# belongsTo(String) : boolean\l# cancel() : \l# ensureReadyToRun() : \l# execute(IProgressMonitor) : boolean\l# getJobFamily() : String\l# search(String, int, int, JavaSearchResultCollector) : \l# search(IJavaElement, int, JavaSearchResultCollector) : \l# cleanCategoryTableCache(boolean, JavaSearchResultCollector) : \l# testSearchStringTypeDeclarations() : \l# testSearchStringTypeReferences() : \l# testSearchJavaElementTypeDeclarations() : \l# testSearchJavaElementTypeReferences() : \l# testSearchStringFieldDeclarations() : \l# testSearchStringFieldReferences() : \l# testSearchJavaElementFieldDeclarations() : \l# testSearchJavaElementFieldReferences() : \l# testSearchStringMethodDeclarations() : \l# testSearchStringMethodReferences() : \l# testSearchJavaElementMethodDeclarations() : \l# testSearchJavaElementMethodReferences() : \l# testSearchStringConstructorDeclarations() : \l# testSearchStringConstructorReferences() : \l# testSearchJavaElementConstructorDeclarations() : \l# testSearchJavaElementConstructorReferences() : \l}"
	 ]

	 TestCompletionRequestor [
		 label = "{TestCompletionRequestor|- WARMUP_COUNT : int\l- ITERATION_COUNT : int\l# PROPOSAL_COUNTS : int\l# TESTS_COUNT : int\l# TESTS_LENGTH : int\l# COMPLETIONS_COUNT : int\l- LOG_STREAMS : PrintStream\l|# FullSourceWorkspaceCompletionTests(String) : \l# suite() : Test\l# testClass() : Class\l# setUp() : \l# tearDown() : \l# null() : \l# accept(CompletionProposal) : \l# complete(String, String, String, String, String, int, int) : \l# complete(String, String, String, String, String, int, int, int) : \l# testPerfCompleteMethodDeclaration() : \l# testPerfCompleteMemberAccess() : \l# testPerfCompleteTypeReference() : \l# testPerfCompleteEmptyName() : \l# testPerfCompleteName() : \l# testPerfCompleteEmptyNameWithoutTypes() : \l# testPerfCompleteNameWithoutTypes() : \l# testPerfCompleteEmptyNameWithoutMethods() : \l# testPerfCompleteNameWithoutMethods() : \l}"
	 ]

	 FullSourceWorkspaceFormatterTests [
		 label = "{FullSourceWorkspaceFormatterTests|# TESTS_COUNT : int\l- WARMUP_COUNT : int\l# TESTS_LENGTH : int\l- LOG_STREAMS : PrintStream\l# FORMAT_TYPE_PATH : IPath\l# FORMAT_TYPE_SOURCE : String\l|# FullSourceWorkspaceFormatterTests(String) : \l# null() : \l# suite() : Test\l# testClass() : Class\l# setUp() : \l# tearDown() : \l# testFormatDefault() : \l# testFormatDefaultBigFile() : \l# resetCounters() : \l}"
	 ]

	 PackageRequestor [
		 label = "{PackageRequestor|# TESTS_COUNT : int\l- WARMUP_COUNT : int\l- FOLDERS_COUNT : int\l- PACKAGES_COUNT : int\l# TESTS_LENGTH : int\l# JLS3_INTERNAL : int\l- LOG_STREAMS : PrintStream\l# BIG_PROJECT_TYPE_PATH : IPath\l# WORKING_COPY : ICompilationUnit\l# count : int\l# count : int\l# pkgs : ArrayList\l|# FullSourceWorkspaceModelTests(String) : \l# null() : \l# suite() : Test\l# testClass() : Class\l# setUp() : \l# setUpBigProject() : \l# setUpBigJars() : \l# tearDown() : \l# null() : \l# acceptSearchMatch(SearchMatch) : \l# searchAllTypeNames(IJavaSearchScope) : \l# acceptType(int, char, char, char, String) : \l# assertElementEquals(String, String, IJavaElement) : \l# assertElementsEqual(String, String, IJavaElement) : \l# assertElementsEqual(String, String, IJavaElement, boolean) : \l# touchFiles(File) : \l# createJavaProject(String) : IJavaProject\l# getNameLookup(JavaProject) : NameLookup\l# testNameLookupFindKnownType() : \l# testNameLookupFindKnownSecondaryType() : \l# testNameLookupFindUnknownType() : \l# testProjectFindKnownType() : \l# testProjectFindKnownMemberType() : \l# testProjectFindKnownSecondaryType() : \l# testProjectFindUnknownType() : \l# testProjectFindUnknownTypeAfterSetClasspath() : \l# testPerfReconcile() : \l# getProblemRequestor(ICompilationUnit) : IProblemRequestor\l# testPerfReconcileBigFileWithSyntaxError() : \l# testReconcileDuplicates() : \l# testPerfDeleteLotsOfMembersAndReconcile() : \l# testPerfBatchCreatePackageAndReconcile() : \l# run(IProgressMonitor) : \l# run(IProgressMonitor) : \l# testPerfSearchAllTypeNamesAndReconcile() : \l# getProblemRequestor(ICompilationUnit) : IProblemRequestor\l# testPopulateTwoBigJars() : \l# testSeekPackageFragments() : \l# acceptField(IField) : \l# acceptInitializer(IInitializer) : \l# acceptMemberType(IType) : \l# acceptMethod(IMethod) : \l# acceptPackageFragment(IPackageFragment) : \l# acceptType(IType) : \l# isCanceled() : boolean\l# testCloseProjects() : \l# testCreateJavaElement() : \l# testInitJDTPlugin() : \l# testFindType() : \l# testGetSourceBigJarNoAttachment() : \l# testReopenSingleProject() : \l# testRefreshExternalArchives() : \l# testResolveClasspath() : \l# getExternalPath() : String\l# testGetAllPackageFragmentRoots() : \l# resetCounters() : \l}"
	 ]

	 Measuring [
		 label = "{Measuring|- TESTS_COUNT : int\l- ITERATIONS_COUNT : int\l- WARMUP_COUNT : int\l- LOG_STREAMS : PrintStream\l- INT_FORMAT : NumberFormat\l# count : int\l# SEARCH_ALL_TYPE_NAMES_COUNT : int\l# count : int\l# count : int\l# count : int\l# start : boolean\l|# FullSourceWorkspaceSearchTests(String) : \l# null() : \l# suite() : Test\l# testClass() : Class\l# setUp() : \l# tearDown() : \l# null() : \l# acceptSearchMatch(SearchMatch) : \l# null() : \l# acceptClass(char, char, char, String) : \l# acceptInterface(char, char, char, String) : \l# null() : \l# acceptType(int, char, char, char, String) : \l# null() : \l# acceptTypeNameMatch(TypeNameMatch) : \l# null() : \l# Measuring(boolean) : \l# belongsTo(String) : boolean\l# cancel() : \l# ensureReadyToRun() : \l# execute(IProgressMonitor) : boolean\l# getJobFamily() : String\l# search(String, int, int, IJavaSearchScope, SearchRequestor) : \l# cleanCategoryTableCache(boolean, IJavaSearchScope, JavaSearchResultCollector) : \l# testIndexing() : \l# testIndexingOneProject() : \l# testSearchAllTypeNames() : \l# testNewSearchAllTypeNames() : \l# testSearchAllTypeNameMatches() : \l# testSearchType() : \l# testSearchField() : \l# testSearchMethod() : \l# testSearchBinaryMethod() : \l# testSearchConstructor() : \l# _testSearchPackageDeclarations() : \l# testSearchPackageDeclarationsWorkspace() : \l# _testGotoPackage() : \l# acceptSearchMatch(SearchMatch) : \l}"
	 ]

	 FullSourceProjectsFilter [
		 label = "{FullSourceProjectsFilter|# DEBUG : boolean\l# PRINT : boolean\l# TOUCH : boolean\l# INITIAL_OPTIONS : Hashtable\l# COMPLIANCE : String\l# MAX_GC : int\l# TIME_GC : int\l# DELTA_GC : int\l# ENV : TestingEnvironment\l# ALL_PROJECTS : IJavaProject\l# JDT_CORE_PROJECT : IJavaProject\l# PARSER_WORKING_COPY : ICompilationUnit\l# BIG_PROJECT_NAME : String\l# BIG_PROJECT : JavaProject\l# BIG_JAR1_NAME : String\l# BIG_JAR2_NAME : String\l+ COMPILER_OUTPUT_DIR : String\l# INDEX_MANAGER : IndexManager\l# ALL_TESTS_COUNT : int\l# TEST_POSITION : int\l# TESTS_NAME_LIST : List\l# MEASURES_COUNT : int\l# scenarioReadableName : String\l# scenarioComment : StringBuffer\l# SCENARII_COMMENT : Map\l# nbMeasures : int\l# startMeasuring : long\l# ERROR_THRESHOLD : double\l# ERROR_STRING : String\l- INVALID_DIR : File\l# LOG_DIR : File\l# DIM_NAMES : String\l# LOG_VERSION : String\l# PATCH_ID : String\l# RUN_ID : String\l- percentFormat : NumberFormat\l- d2Format : NumberFormat\l|# null() : \l# compliance() : String\l# null() : \l# null() : \l# null() : \l# null() : \l# null() : \l# null() : \l# accept(File) : boolean\l# initLogDir() : \l# FullSourceWorkspaceTests(String) : \l# buildSuite(Class) : Test\l# createPrintStream(Class, PrintStream, int, String) : \l# getPluginBinariesDirectoryPath() : String\l# suiteTypeShortName(Class) : String\l# logPerfResult(PrintStream, int) : \l# storeDimension(PrintStream, String, Statistics, int) : \l# runGc() : \l# setUp() : \l# setUpFullSourceWorkspace() : \l# tagAsGlobalSummary(String, Dimension) : \l# tagAsGlobalSummary(String, boolean) : \l# tagAsGlobalSummary(String, Dimension, boolean) : \l# tagAsGlobalSummary(String, Dimension) : \l# tagAsSummary(String, Dimension) : \l# tagAsSummary(String, boolean) : \l# tagAsSummary(String, Dimension, boolean) : \l# tagAsSummary(String, Dimension) : \l# tagAsSummary(String, Dimension, boolean) : \l# startMeasuring() : \l# stopMeasuring() : \l# commitMeasurements() : \l# tearDown() : \l# clearOptions(Map) : Map\l# createJavaProject(String, String, String, String) : IJavaProject\l# run(IProgressMonitor) : \l# collectAllFiles(File, ArrayList, FileFilter) : \l# getAllFiles(File, FileFilter) : File\l# getClassFile(IJavaProject, String, String, String) : IClassFile\l# getCompilationUnit(String, String, String) : ICompilationUnit\l# getPackageFragment(IJavaProject, String, String) : IPa